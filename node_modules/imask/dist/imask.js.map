{"version":3,"file":"imask.js","sources":["../src/core/utils.ts","../src/core/action-details.ts","../src/core/holder.ts","../src/masked/factory.ts","../src/controls/mask-element.ts","../src/controls/html-mask-element.ts","../src/controls/html-input-mask-element.ts","../src/controls/html-contenteditable-mask-element.ts","../src/controls/input.ts","../src/core/change-details.ts","../src/core/continuous-tail-details.ts","../src/masked/base.ts","../src/masked/pattern/chunk-tail-details.ts","../src/masked/pattern/cursor.ts","../src/masked/pattern/fixed-definition.ts","../src/masked/pattern/input-definition.ts","../src/masked/regexp.ts","../src/masked/pattern.ts","../src/masked/range.ts","../src/masked/date.ts","../src/masked/dynamic.ts","../src/masked/enum.ts","../src/masked/function.ts","../src/masked/number.ts","../src/masked/pipe.ts","../src/index.ts"],"sourcesContent":["/** Checks if value is string */\nexport\nfunction isString (str: unknown): str is string {\n  return typeof str === 'string' || str instanceof String;\n}\n\n/** Checks if value is object */\nexport\nfunction isObject (obj: unknown): obj is object {\n  return typeof obj === 'object' && obj != null && obj?.constructor?.name === 'Object';\n}\n\nexport\nfunction pick<T extends object, K extends keyof T, V extends T[keyof T]> (\n  obj: T,\n  keys: K[] | ((v: V, k: K) => boolean),\n): Pick<T, K> {\n  if (Array.isArray(keys)) return pick(obj, (_, k) => keys.includes(k));\n  return (Object.entries(obj) as unknown as Array<[K, V]>)\n    .reduce((acc, [k, v]) => {\n      if (keys(v, k)) acc[k] = v;\n      return acc;\n    }, {} as any);\n}\n\n/** Direction */\nexport\nconst DIRECTION = {\n  NONE: 'NONE',\n  LEFT: 'LEFT',\n  FORCE_LEFT: 'FORCE_LEFT',\n  RIGHT: 'RIGHT',\n  FORCE_RIGHT: 'FORCE_RIGHT',\n} as const;\n\n/** Direction */\nexport\ntype Direction = typeof DIRECTION[keyof typeof DIRECTION];\n\nexport\nfunction forceDirection (direction: Direction): Direction {\n  switch (direction) {\n    case DIRECTION.LEFT:\n      return DIRECTION.FORCE_LEFT;\n    case DIRECTION.RIGHT:\n      return DIRECTION.FORCE_RIGHT;\n    default:\n      return direction;\n  }\n}\n\n/** Escapes regular expression control chars */\nexport\nfunction escapeRegExp (str: string): string {\n  return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n}\n\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\nexport\nfunction objectIncludes (b: any, a: any): boolean {\n  if (a === b) return true;\n\n  const arrA = Array.isArray(a), arrB = Array.isArray(b);\n  let i;\n\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++)\n      if (!objectIncludes(a[i], b[i])) return false;\n    return true;\n  }\n\n  if (arrA != arrB) return false;\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    const dateA = a instanceof Date, dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n\n    const regexpA = a instanceof RegExp, regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n\n    const keys = Object.keys(a);\n    // if (keys.length !== Object.keys(b).length) return false;\n\n    for (i = 0; i < keys.length; i++)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = 0; i < keys.length; i++)\n      if(!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n\n    return true;\n  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n      return a.toString() === b.toString()\n  }\n\n  return false;\n}\n\n/** Selection range */\nexport\ntype Selection = {\n  start: number;\n  end: number;\n};\n","import { type Direction, type Selection, DIRECTION } from './utils';\n\nexport\ntype ActionDetailsOptions = Pick<ActionDetails,\n  | 'value'\n  | 'cursorPos'\n  | 'oldValue'\n  | 'oldSelection'\n>;\n\n\n/** Provides details of changing input */\nexport default\nclass ActionDetails {\n  /** Current input value */\n  declare value: string;\n  /** Current cursor position */\n  declare cursorPos: number;\n  /** Old input value */\n  declare oldValue: string;\n  /** Old selection */\n  declare oldSelection: Selection;\n\n  constructor (opts: ActionDetailsOptions) {\n    Object.assign(this, opts);\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n  }\n\n  /** Start changing position */\n  get startChangePos (): number {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /** Inserted symbols count */\n  get insertedCount (): number {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /** Inserted symbols */\n  get inserted (): string {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /** Removed symbols count */\n  get removedCount (): number {\n    // Math.max for opposite operation\n    return Math.max((this.oldSelection.end - this.startChangePos) ||\n      // for Delete\n      this.oldValue.length - this.value.length, 0);\n  }\n\n  /** Removed symbols */\n  get removed (): string {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /** Unchanged head symbols */\n  get head (): string {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /** Unchanged tail symbols */\n  get tail (): string {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /** Remove direction */\n  get removeDirection (): Direction {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (\n      (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n      // if not range removed (event with backspace)\n      this.oldSelection.end === this.oldSelection.start\n    ) ?\n      DIRECTION.RIGHT :\n      DIRECTION.LEFT;\n  }\n}\n","import type { default as _InputMask, InputMaskElement as _InputMaskElement } from '../controls/input';\nimport type { default as _Masked } from '../masked/base';\nimport type { default as _MaskedPattern } from '../masked/pattern';\nimport type { default as _MaskedDate } from '../masked/date';\nimport type { default as _MaskedDynamic } from '../masked/dynamic';\nimport type { default as _MaskedEnum } from '../masked/enum';\nimport type { default as _MaskedRange } from '../masked/range';\nimport type { default as _MaskedNumber } from '../masked/number';\nimport type { default as _MaskedFunction } from '../masked/function';\nimport type { default as _MaskedRegExp } from '../masked/regexp';\nimport type {\n  default as _createMask,\n  FactoryArg,\n} from '../masked/factory';\nimport type { default as _ChangeDetails } from './change-details';\n\nimport type { default as _MaskElement } from '../controls/mask-element';\nimport type { default as _HTMLMaskElement } from '../controls/html-mask-element';\nimport type { default as _HTMLContenteditableMaskElement } from '../controls/html-contenteditable-mask-element';\nimport type {\n  createPipe as _createPipe,\n  pipe as _pipe,\n  PIPE_TYPE as _PIPE_TYPE\n} from '../masked/pipe';\n\n\n/** Applies mask on element */\nfunction IMask<Opts extends FactoryArg> (el: _InputMaskElement, opts: Opts): _InputMask<Opts> {\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace IMask {\n  export let InputMask: typeof _InputMask;\n  export let createMask: typeof _createMask;\n  export let Masked: typeof _Masked;\n  export let MaskedPattern: typeof _MaskedPattern;\n  export let MaskedDate: typeof _MaskedDate;\n  export let MaskedDynamic: typeof _MaskedDynamic;\n  export let MaskedEnum: typeof _MaskedEnum;\n  export let MaskedRange: typeof _MaskedRange;\n  export let MaskedNumber: typeof _MaskedNumber;\n  export let MaskedFunction: typeof _MaskedFunction;\n  export let MaskedRegExp: typeof _MaskedRegExp;\n  export let ChangeDetails: typeof _ChangeDetails;\n  export let MaskElement: typeof _MaskElement;\n  export let HTMLMaskElement: typeof _HTMLMaskElement;\n  export let HTMLContenteditableMaskElement: typeof _HTMLContenteditableMaskElement;\n  export let createPipe: typeof _createPipe;\n  export let pipe: typeof _pipe;\n  export let PIPE_TYPE: typeof _PIPE_TYPE;\n}\n\nexport default IMask;\n","import { isString, pick, isObject } from '../core/utils';\nimport type Masked from './base';\nimport { type MaskedOptions } from './base';\nimport IMask from '../core/holder';\n\nimport type MaskedRegExp from './regexp';\nimport type MaskedPattern from './pattern';\nimport type MaskedFunction from './function';\nimport type MaskedDate from './date';\nimport type MaskedNumber from './number';\nimport type MaskedDynamic from './dynamic';\nimport type MaskedRange from './range';\nimport type MaskedEnum from './enum';\n\nimport { type MaskedEnumOptions } from './enum';\nimport { type MaskedRangeOptions } from './range';\nimport { type MaskedDynamicOptions } from './dynamic';\nimport { type MaskedPatternOptions } from './pattern';\nimport { type MaskedNumberOptions } from './number';\nimport { type MaskedRegExpOptions } from './regexp';\nimport { type MaskedFunctionOptions } from './function';\nimport { type MaskedDateOptions } from './date';\n\ntype MaskedDateFactoryOptions = Omit<MaskedDateOptions, 'mask'> & { mask: DateConstructor };\n\nexport\ntype FactoryStaticOpts =\n  | MaskedDateFactoryOptions\n  | MaskedNumberOptions\n  | MaskedPatternOptions\n  | MaskedDynamicOptions\n  | MaskedRegExpOptions\n  | MaskedFunctionOptions\n;\n\nexport\ntype AllFactoryStaticOpts =\n  & MaskedDateFactoryOptions\n  & MaskedNumberOptions\n  & MaskedPatternOptions\n  & MaskedDynamicOptions\n  & MaskedRegExpOptions\n  & MaskedFunctionOptions\n  & MaskedEnumOptions\n  & MaskedRangeOptions\n;\n\nexport\ntype FactoryStaticReturnMasked<Opts extends FactoryStaticOpts> =\n  Opts extends MaskedDateFactoryOptions ? MaskedDate :\n  Opts extends MaskedNumberOptions ? MaskedNumber :\n  Opts extends MaskedPatternOptions ? MaskedPattern :\n  Opts extends MaskedDynamicOptions ? MaskedDynamic :\n  Opts extends MaskedRegExpOptions ? MaskedRegExp :\n  Opts extends MaskedFunctionOptions ? MaskedFunction :\n  never\n;\n\nexport\ntype FactoryStaticMaskReturnMasked<Mask extends FactoryStaticOpts['mask']> =\n  Mask extends MaskedDateFactoryOptions['mask'] ? MaskedDate :\n  Mask extends MaskedNumberOptions['mask'] ? MaskedNumber :\n  Mask extends MaskedPatternOptions['mask'] ? MaskedPattern :\n  Mask extends MaskedDynamicOptions['mask'] ? MaskedDynamic :\n  Mask extends MaskedRegExpOptions['mask'] ? MaskedRegExp :\n  Mask extends MaskedFunctionOptions['mask'] ? MaskedFunction :\n  never\n;\n\n\nexport\ntype FactoryInstanceOpts = MaskedOptions & { mask: Masked };\n\nexport\ntype FactoryInstanceReturnMasked<Opts extends FactoryInstanceOpts> = Opts extends { mask: infer M } ? M : never;\n\nexport\ntype FactoryConstructorOpts = MaskedOptions & { mask:\n  | typeof Masked\n  | typeof MaskedDate\n  | typeof MaskedNumber\n  | typeof MaskedEnum\n  | typeof MaskedRange\n  | typeof MaskedRegExp\n  | typeof MaskedFunction\n  | typeof MaskedPattern\n  | typeof MaskedDynamic\n  | typeof MaskedRegExp\n};\n \nexport\ntype FactoryConstructorReturnMasked<Opts extends FactoryConstructorOpts> =\n  Opts extends { mask: typeof MaskedDate } ? MaskedDate :\n  Opts extends { mask: typeof MaskedNumber } ? MaskedNumber :\n  Opts extends { mask: typeof MaskedEnum } ? MaskedEnum :\n  Opts extends { mask: typeof MaskedRange } ? MaskedRange :\n  Opts extends { mask: typeof MaskedRegExp } ? MaskedRegExp :\n  Opts extends { mask: typeof MaskedFunction } ? MaskedFunction :\n  Opts extends { mask: typeof MaskedPattern } ? MaskedPattern :\n  Opts extends { mask: typeof MaskedDynamic } ? MaskedDynamic :\n  Masked\n;\n\nexport\ntype FactoryOpts = FactoryConstructorOpts | FactoryInstanceOpts | FactoryStaticOpts;\n\nexport\ntype FactoryArg = Masked | FactoryOpts | FactoryStaticOpts['mask'];\n\n\nexport\ntype UpdateStaticOpts<Opts extends FactoryStaticOpts> =\n  Opts extends MaskedEnumOptions ? MaskedEnumOptions :\n  Opts extends MaskedRangeOptions ? MaskedRangeOptions :\n  Opts extends MaskedDynamicOptions ? MaskedDynamicOptions :\n  Opts extends MaskedPatternOptions ? MaskedPatternOptions :\n  Opts extends MaskedDateOptions ? MaskedDateOptions :\n  Opts extends MaskedNumberOptions ? MaskedNumberOptions :\n  Opts extends MaskedRegExpOptions ? MaskedRegExpOptions :\n  Opts extends MaskedFunctionOptions ? MaskedFunctionOptions :\n  never\n;\n\ntype UpdateAnyOpts = Record<string, any>;\n\nexport\ntype UpdateInstanceOpts<M extends Masked> =\n  M extends MaskedRegExp ? MaskedRegExpOptions :\n  M extends MaskedFunction ? MaskedFunctionOptions :\n  M extends MaskedDate ? MaskedDateOptions :\n  M extends MaskedNumber ? MaskedNumberOptions :\n  M extends MaskedDynamic ? MaskedDynamicOptions :\n  M extends MaskedRange ? MaskedRangeOptions :\n  M extends MaskedEnum ? MaskedEnumOptions :\n  M extends MaskedPattern ? MaskedPatternOptions :\n  UpdateAnyOpts\n;\n\nexport\ntype UpdateConstructorOpts<M extends FactoryConstructorOpts> =\n  M extends { mask: typeof MaskedDate } ? MaskedDateOptions :\n  M extends { mask: typeof MaskedNumber } ? MaskedNumberOptions :\n  M extends { mask: typeof MaskedEnum } ? MaskedEnumOptions :\n  M extends { mask: typeof MaskedRange } ? MaskedRangeOptions :\n  M extends { mask: typeof MaskedRegExp } ? MaskedRegExpOptions :\n  M extends { mask: typeof MaskedFunction } ? MaskedFunctionOptions :\n  M extends { mask: typeof MaskedPattern } ? MaskedPatternOptions :\n  M extends { mask: typeof MaskedDynamic } ? MaskedDynamicOptions :\n  UpdateAnyOpts\n;\n\nexport\ntype UpdateStaticMaskOpts<M extends FactoryStaticOpts['mask']> =\n  M extends MaskedDateFactoryOptions['mask'] ? MaskedDateOptions :\n  M extends MaskedNumberOptions['mask'] ? MaskedNumberOptions :\n  M extends MaskedPatternOptions['mask'] ? MaskedPatternOptions :\n  M extends MaskedDynamicOptions['mask'] ? MaskedDynamicOptions :\n  M extends MaskedRegExpOptions['mask'] ? MaskedRegExpOptions :\n  M extends MaskedFunctionOptions['mask'] ? MaskedFunctionOptions :\n  never\n;\n\nexport\ntype UpdateOpts<Opts extends FactoryArg> = Partial<\n  Opts extends Masked ? UpdateInstanceOpts<Opts> :\n  Opts extends FactoryStaticOpts['mask'] ? UpdateStaticMaskOpts<Opts> :\n  Opts extends FactoryStaticOpts ? UpdateStaticOpts<Opts> :\n  Opts extends FactoryInstanceOpts ? UpdateInstanceOpts<Opts['mask']> :\n  Opts extends FactoryConstructorOpts ? UpdateConstructorOpts<Opts> :\n  UpdateAnyOpts\n>;\n\nexport\ntype FactoryReturnMasked<Opts extends FactoryArg> =\n  Opts extends Masked ? Opts :\n  Opts extends FactoryStaticOpts['mask'] ? FactoryStaticMaskReturnMasked<Opts> :\n  Opts extends FactoryConstructorOpts ? FactoryConstructorReturnMasked<Opts> :\n  Opts extends FactoryInstanceOpts ? FactoryInstanceReturnMasked<Opts> :\n  Opts extends FactoryStaticOpts ? FactoryStaticReturnMasked<Opts> :\n  never\n;\n\n\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n// export function maskedClass(mask: string): typeof MaskedPattern;\n// export function maskedClass(mask: DateConstructor): typeof MaskedDate;\n// export function maskedClass(mask: NumberConstructor): typeof MaskedNumber;\n// export function maskedClass(mask: Array<any> | ArrayConstructor): typeof MaskedDynamic;\n// export function maskedClass(mask: MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass(mask: Masked): typeof Masked;\n// export function maskedClass(mask: typeof Masked): typeof Masked;\n// export function maskedClass(mask: typeof MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: typeof MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: typeof MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: typeof MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: typeof MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: typeof MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: typeof MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: typeof MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass<Mask extends typeof Masked> (mask: Mask): Mask;\n// export function maskedClass(mask: RegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: (value: string, ...args: any[]) => boolean): typeof MaskedFunction;\n\n/** Get Masked class by mask type */\nexport function maskedClass (mask: Masked | FactoryOpts['mask']): any /* TODO */ {\n  if (mask == null) throw new Error('mask property should be defined');\n\n  if (mask instanceof RegExp) return IMask.MaskedRegExp;\n  if (isString(mask)) return IMask.MaskedPattern;\n  if (mask === Date) return IMask.MaskedDate;\n  if (mask === Number) return IMask.MaskedNumber;\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n  if (IMask.Masked && (mask as any).prototype instanceof IMask.Masked) return mask;\n  if (IMask.Masked && mask instanceof IMask.Masked) return mask.constructor;\n  if (mask instanceof Function) return IMask.MaskedFunction;\n\n  console.warn('Mask not found for mask', mask);  // eslint-disable-line no-console\n  return IMask.Masked;\n}\n\ntype MaskedClassOf<M extends Masked> =\n  M extends MaskedDate ? typeof MaskedDate :\n  M extends MaskedNumber ? typeof MaskedNumber :\n  M extends MaskedEnum ? typeof MaskedEnum :\n  M extends MaskedRange ? typeof MaskedRange :\n  M extends MaskedRegExp ? typeof MaskedRegExp :\n  M extends MaskedFunction ? typeof MaskedFunction :\n  M extends MaskedPattern ? typeof MaskedPattern :\n  M extends MaskedDynamic ? typeof MaskedDynamic :\n  any\n;\n\n\ntype NormalizedMaskedOpts<Opts extends Masked> = Omit<Opts, 'mask'> & {\n  _mask: Opts,\n  mask: MaskedClassOf<Opts>,\n};\n\ntype NormalizedInstanceOpts<Opts extends FactoryInstanceOpts> =\n  Omit<Opts['mask'], `_${string}` | 'mask'> &\n  NormalizedMaskedOpts<Opts['mask']>\n;\n\nexport\ntype NormalizedOpts<Opts extends FactoryArg> =\n  Opts extends FactoryStaticOpts['mask'] ? { mask: Opts } :\n  Opts extends Masked ? NormalizedMaskedOpts<Opts> :\n  Opts extends FactoryInstanceOpts ? NormalizedInstanceOpts<Opts> :\n  Opts extends FactoryStaticOpts | FactoryConstructorOpts ? Opts :\n  { mask: Opts }\n;\n\nexport\nfunction normalizeOpts<Opts extends FactoryArg> (opts: Opts): NormalizedOpts<Opts> {\n  if (!opts) throw new Error('Options in not defined');\n\n  if (IMask.Masked) {\n    if ((opts as any).prototype instanceof IMask.Masked) return { mask: opts } as NormalizedOpts<Opts>;\n\n    /*\n      handle cases like:\n      1) opts = Masked\n      2) opts = { mask: Masked, ...instanceOpts }\n    */\n    const { mask=undefined, ...instanceOpts } =\n      opts instanceof IMask.Masked ? { mask: opts } :\n      isObject(opts) && (opts as FactoryInstanceOpts).mask instanceof IMask.Masked ? (opts as FactoryInstanceOpts) : {};\n\n    if (mask) {\n      const _mask = (mask as Masked).mask;\n\n      return {\n        ...pick(mask, (_, k: string) => !k.startsWith('_')),\n        mask: mask.constructor,\n        _mask,\n        ...instanceOpts,\n      } as NormalizedOpts<Opts>;\n    }\n  }\n\n  if (!isObject(opts)) return { mask: opts } as unknown as NormalizedOpts<Opts>;\n\n  return { ...opts } as unknown as NormalizedOpts<Opts>;\n}\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n\n// From masked\n// export default function createMask<Opts extends Masked, ReturnMasked=Opts> (opts: Opts): ReturnMasked;\n// // From masked class\n// export default function createMask<Opts extends MaskedOptions<typeof Masked>, ReturnMasked extends Masked=InstanceType<Opts['mask']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDate>, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedNumber>, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedEnum>, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRange>, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedFunction>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedPattern>, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDynamic>, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// // From mask opts\n// export default function createMask<Opts extends MaskedOptions<Masked>, ReturnMasked=Opts extends MaskedOptions<infer M> ? M : never> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedNumberOptions, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDateFactoryOptions, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedEnumOptions, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedRangeOptions, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedPatternOptions, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDynamicOptions, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<RegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<Function>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n\n/** Creates new {@link Masked} depending on mask type */\nexport default\nfunction createMask<Opts extends FactoryArg> (opts: Opts): FactoryReturnMasked<Opts> {\n  if (IMask.Masked && (opts instanceof IMask.Masked)) return opts as FactoryReturnMasked<Opts>;\n  const nOpts = normalizeOpts(opts);\n\n  const MaskedClass = maskedClass(nOpts.mask);\n  if (!MaskedClass) throw new Error('Masked class is not found for provided mask, appropriate module needs to be imported manually before creating mask.');\n\n  if (nOpts.mask === MaskedClass) delete nOpts.mask;\n  if ((nOpts as any)._mask) { nOpts.mask = (nOpts as any)._mask; delete (nOpts as any)._mask; }\n  return new MaskedClass(nOpts);\n}\n\n\nIMask.createMask = createMask;\n","import IMask from '../core/holder';\n\n\nexport\ntype ElementEvent =\n  'selectionChange' |\n  'input' |\n  'drop' |\n  'click' |\n  'focus' |\n  'commit';\n\n/**  Generic element API to use with mask */\nexport default\nabstract class MaskElement {\n  /** */\n  abstract _unsafeSelectionStart: number | null;\n  /** */\n  abstract _unsafeSelectionEnd: number | null;\n  /** */\n  abstract value: string;\n\n  /** Safely returns selection start */\n  get selectionStart (): number {\n    let start;\n    try {\n      start = this._unsafeSelectionStart;\n    } catch {}\n\n    return start != null ?\n      start :\n      this.value.length;\n  }\n\n  /** Safely returns selection end */\n  get selectionEnd (): number {\n    let end;\n    try {\n      end = this._unsafeSelectionEnd;\n    } catch {}\n\n    return end != null ?\n      end :\n      this.value.length;\n  }\n\n  /** Safely sets element selection */\n  select (start: number, end: number) {\n    if (start == null || end == null ||\n      start === this.selectionStart && end === this.selectionEnd) return;\n\n    try {\n      this._unsafeSelect(start, end);\n    } catch {}\n  }\n\n  /** */\n  get isActive (): boolean { return false; }\n  /** */\n  abstract _unsafeSelect (start: number, end: number): void;\n  /** */\n  abstract bindEvents (handlers: {[key in ElementEvent]: Function}): void;\n  /** */\n  abstract unbindEvents (): void\n}\n\n\nIMask.MaskElement = MaskElement;\n","import MaskElement, { type ElementEvent } from './mask-element';\nimport IMask from '../core/holder';\n\n\n/** Bridge between HTMLElement and {@link Masked} */\nexport default\nabstract class HTMLMaskElement extends MaskElement {\n  /** Mapping between HTMLElement events and mask internal events */\n  static EVENTS_MAP = {\n    selectionChange: 'keydown',\n    input: 'input',\n    drop: 'drop',\n    click: 'click',\n    focus: 'focus',\n    commit: 'blur',\n  } as const;\n  /** HTMLElement to use mask on */\n  declare input: HTMLElement;\n  declare _handlers: {[k: string]: EventListener};\n  abstract value: string;\n\n  constructor (input: HTMLElement) {\n    super();\n    this.input = input;\n    this._handlers = {};\n  }\n\n  get rootElement (): HTMLDocument {\n    return (this.input.getRootNode?.() ?? document) as HTMLDocument;\n  }\n\n  /**\n    Is element in focus\n  */\n  get isActive (): boolean {\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /**\n    Binds HTMLElement events to mask internal events\n  */\n  override bindEvents (handlers: {[key in ElementEvent]: EventListener}) {\n    (Object.keys(handlers) as Array<ElementEvent>)\n      .forEach(event => this._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]));\n  }\n\n  /**\n    Unbinds HTMLElement events to mask internal events\n  */\n  override unbindEvents () {\n    Object.keys(this._handlers)\n      .forEach(event => this._toggleEventHandler(event));\n  }\n\n  _toggleEventHandler (event: string, handler?: EventListener): void {\n    if (this._handlers[event]) {\n      this.input.removeEventListener(event, this._handlers[event]);\n      delete this._handlers[event];\n    }\n\n    if (handler) {\n      this.input.addEventListener(event, handler);\n      this._handlers[event] = handler;\n    }\n  }\n}\n\n\nIMask.HTMLMaskElement = HTMLMaskElement;\n","import HTMLMaskElement from './html-mask-element';\nimport IMask from '../core/holder';\n\nexport\ntype InputElement = HTMLTextAreaElement | HTMLInputElement;\n\n/** Bridge between InputElement and {@link Masked} */\nexport default\nclass HTMLInputMaskElement extends HTMLMaskElement {\n  /** InputElement to use mask on */\n  declare input: InputElement;\n\n  constructor (input: InputElement) {\n    super(input);\n    this.input = input;\n    this._handlers = {};\n  }\n\n  /** Returns InputElement selection start */\n  override get _unsafeSelectionStart (): number | null {\n    return this.input.selectionStart != null ? this.input.selectionStart : this.value.length;\n  }\n\n  /** Returns InputElement selection end */\n  override get _unsafeSelectionEnd (): number | null {\n    return this.input.selectionEnd;\n  }\n\n  /** Sets InputElement selection */\n  _unsafeSelect (start: number, end: number) {\n    this.input.setSelectionRange(start, end);\n  }\n\n  override get value (): string {\n    return this.input.value;\n  }\n  override set value (value: string) {\n    this.input.value = value;\n  }\n}\n\n\nIMask.HTMLMaskElement = HTMLMaskElement;\n","import HTMLMaskElement from './html-mask-element';\nimport IMask from '../core/holder';\n\n\nexport default\nclass HTMLContenteditableMaskElement extends HTMLMaskElement {\n  declare input: HTMLElement;\n  /** Returns HTMLElement selection start */\n  override get _unsafeSelectionStart (): number | null {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Returns HTMLElement selection end */\n  override get _unsafeSelectionEnd (): number | null {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Sets HTMLElement selection */\n  override _unsafeSelect (start: number, end: number) {\n    if (!this.rootElement.createRange) return;\n\n    const range = this.rootElement.createRange();\n    range.setStart(this.input.firstChild || this.input, start);\n    range.setEnd(this.input.lastChild || this.input, end);\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  /** HTMLElement value */\n  override get value (): string {\n    return this.input.textContent || '';\n  }\n  override set value (value: string) {\n    this.input.textContent = value;\n  }\n}\n\n\nIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n","import { objectIncludes, DIRECTION, type Selection } from '../core/utils';\nimport ActionDetails from '../core/action-details';\nimport createMask, { type UpdateOpts, maskedClass, type FactoryArg, type FactoryReturnMasked } from '../masked/factory';\nimport Masked from '../masked/base';\nimport MaskElement from './mask-element';\nimport HTMLInputMaskElement, { type InputElement } from './html-input-mask-element';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element';\nimport IMask from '../core/holder';\n\n\nexport\ntype InputMaskElement = MaskElement | InputElement | HTMLElement;\n\nexport\ntype InputMaskEventListener = (e?: InputEvent) => void;\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nexport default\nclass InputMask<Opts extends FactoryArg> {\n  /**\n    View element\n  */\n  declare el: MaskElement;\n\n  /** Internal {@link Masked} model */\n  declare masked: FactoryReturnMasked<Opts>;\n\n  declare _listeners: Record<string, Array<InputMaskEventListener>>;\n  declare _value: string;\n  declare _changingCursorPos: number;\n  declare _unmaskedValue: string;\n  declare _selection: Selection;\n  declare _cursorChanging?: ReturnType<typeof setTimeout>;\n  declare _inputEvent?: InputEvent;\n\n  constructor (el: InputMaskElement, opts: Opts) {\n    this.el =\n      (el instanceof MaskElement) ? el :\n      (el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA') ? new HTMLContenteditableMaskElement(el) :\n      new HTMLInputMaskElement(el as InputElement);\n\n    this.masked = createMask(opts);\n\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n\n  maskEquals (mask: any): boolean {\n    return mask == null || this.masked?.maskEquals(mask);\n  }\n\n  /** Masked */\n  get mask (): FactoryReturnMasked<Opts>['mask'] {\n    return this.masked.mask;\n  }\n  set mask (mask: any) {\n    if (this.maskEquals(mask)) return;\n\n    if (!((mask as Masked) instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask as Masked)) {\n      // TODO \"any\" no idea\n      this.masked.updateOptions({ mask } as any);\n      return;\n    }\n\n    const masked = (mask instanceof IMask.Masked ? mask : createMask({ mask } as Opts)) as FactoryReturnMasked<Opts>;\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value (): string {\n    return this._value;\n  }\n\n  set value (str: string) {\n    if (this.value === str) return;\n\n    this.masked.value = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Unmasked value */\n  get unmaskedValue (): string {\n    return this._unmaskedValue;\n  }\n\n  set unmaskedValue (str: string) {\n    if (this.unmaskedValue === str) return;\n\n    this.masked.unmaskedValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue (): FactoryReturnMasked<Opts>['typedValue'] {\n    return this.masked.typedValue;\n  }\n\n  set typedValue (val: FactoryReturnMasked<Opts>['typedValue']) {\n    if (this.masked.typedValueEquals(val)) return;\n\n    this.masked.typedValue = val;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Display value */\n  get displayValue (): string {\n    return this.masked.displayValue;\n  }\n\n  /** Starts listening to element events */\n  _bindEvents () {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange,\n    });\n  }\n\n  /** Stops listening to element events */\n  _unbindEvents () {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /** Fires custom event */\n  _fireEvent (ev: string, e?: InputEvent) {\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n\n    listeners.forEach(l => l(e));\n  }\n\n  /** Current selection start */\n  get selectionStart (): number {\n    return this._cursorChanging ?\n      this._changingCursorPos :\n\n      this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos (): number {\n    return this._cursorChanging ?\n      this._changingCursorPos :\n\n      this.el.selectionEnd;\n  }\n  set cursorPos (pos: number) {\n    if (!this.el || !this.el.isActive) return;\n\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /** Stores current selection */\n  _saveSelection (/* ev */) {\n    if (this.displayValue !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos,\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue () {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl () {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const newDisplayValue = this.displayValue;\n    const isChanged = (this.unmaskedValue !== newUnmaskedValue ||\n      this.value !== newValue);\n\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n\n    if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n    if (isChanged) this._fireChangeEvents();\n  }\n\n  /** Updates options with deep equal check, recreates {@link Masked} model if mask type changes */\n  updateOptions(opts: UpdateOpts<Opts>) {\n    const { mask, ...restOpts } = opts;\n\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = !objectIncludes(this.masked, restOpts);\n\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts);  // TODO\n\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor (cursorPos: number) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /** Delays cursor update to support mobile browsers */\n  _delayUpdateCursor (cursorPos: number) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /** Fires custom events */\n  _fireChangeEvents () {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /** Aborts delayed cursor update */\n  _abortUpdateCursor () {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor () {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly () {\n    if (this.selectionStart !== this.cursorPos) return;  // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on (ev: string, handler: InputMaskEventListener): this {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off (ev: string, handler: InputMaskEventListener): this {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput (e: InputEvent): void {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n\n    // fix strange IE behavior\n    if (!this._selection) return this.updateValue();\n\n    const details = new ActionDetails({\n      // new state\n      value: this.el.value,\n      cursorPos: this.cursorPos,\n\n      // old state\n      oldValue: this.displayValue,\n      oldSelection: this._selection,\n    });\n\n    const oldRawValue = this.masked.rawInputValue;\n\n    const offset = this.masked.splice(\n      details.startChangePos,\n      details.removed.length,\n      details.inserted,\n      details.removeDirection,\n      { input: true, raw: true },\n    ).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ?\n      details.removeDirection :\n      DIRECTION.NONE;\n\n    let cursorPos = this.masked.nearestInputPos(\n      details.startChangePos + offset,\n      removeDirection,\n    );\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n\n    this.updateControl();\n    this.updateCursor(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange () {\n    if (this.displayValue !== this.el.value) {\n      this.updateValue();\n    }\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop (ev: Event) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus (ev: Event) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick (ev: Event) {\n    this.alignCursorFriendly();\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy () {\n    this._unbindEvents();\n    (this._listeners as any).length = 0;\n    delete (this as any).el;\n  }\n}\n\n\nIMask.InputMask = InputMask;\n","import IMask from \"./holder\";\n\n\nexport\ntype ChangeDetailsOptions = Pick<ChangeDetails,\n  | 'inserted'\n  | 'skip'\n  | 'tailShift'\n  | 'rawInserted'\n>;\n\n/** Provides details of changing model value */\nexport default\nclass ChangeDetails {\n  /** Inserted symbols */\n  declare inserted: string;\n  /** Can skip chars */\n  declare skip: boolean;\n  /** Additional offset if any changes occurred before tail */\n  declare tailShift: number;\n  /** Raw inserted is used by dynamic mask */\n  declare rawInserted: string;\n\n  static normalize (prep: string | [string, ChangeDetails]): [string, ChangeDetails] {\n    return Array.isArray(prep) ? prep : [\n      prep,\n      new ChangeDetails(),\n    ];\n  }\n\n  constructor (details?: Partial<ChangeDetailsOptions>) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      skip: false,\n      tailShift: 0,\n    }, details);\n  }\n\n  /** Aggregate changes */\n  aggregate (details: ChangeDetails): this {\n    this.rawInserted += details.rawInserted;\n    this.skip = this.skip || details.skip;\n    this.inserted += details.inserted;\n    this.tailShift += details.tailShift;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset (): number {\n    return this.tailShift + this.inserted.length;\n  }\n}\n\n\nIMask.ChangeDetails = ChangeDetails;\n","import type { TailDetails, AppendTail } from './tail-details';\nimport type ChangeDetails from './change-details';\n\n\ntype ContinuousTailState = Pick<ContinuousTailDetails,\n  | 'value'\n  | 'from'\n  | 'stop'\n>;\n\n/** Provides details of continuous extracted tail */\nexport default\nclass ContinuousTailDetails implements TailDetails {\n  /** Tail value as string */\n  declare value: string;\n  /** Tail start position */\n  declare from: number;\n  /** Start position */\n  declare stop?: number;\n\n  constructor (value: string='', from: number=0, stop?: number) {\n    this.value = value;\n    this.from = from;\n    this.stop = stop;\n  }\n\n  toString (): string { return this.value; }\n\n  extend (tail: string | TailDetails): void {\n    this.value += String(tail);\n  }\n\n  appendTo (masked: AppendTail): ChangeDetails {\n    return masked.append(this.toString(), { tail: true })\n      .aggregate(masked._appendPlaceholder());\n  }\n\n  get state (): ContinuousTailState {\n    return {\n      value: this.value,\n      from: this.from,\n      stop: this.stop,\n    };\n  }\n\n  set state (state: ContinuousTailState) {\n    Object.assign(this, state);\n  }\n\n  unshift (beforePos?: number): string {\n    if (!this.value.length || (beforePos != null && this.from >= beforePos)) return '';\n\n    const shiftChar = this.value[0];\n    this.value = this.value.slice(1);\n    return shiftChar;\n  }\n\n  shift (): string {\n    if (!this.value.length) return '';\n\n    const shiftChar = this.value[this.value.length-1];\n    this.value = this.value.slice(0, -1);\n    return shiftChar;\n  }\n}\n","import ChangeDetails from '../core/change-details';\nimport ContinuousTailDetails from '../core/continuous-tail-details';\nimport { type Direction, DIRECTION, isString, forceDirection } from '../core/utils';\nimport { type TailDetails } from '../core/tail-details';\nimport IMask from '../core/holder';\n\n\nexport\ntype MaskedState = {\n  _value: string,\n  _rawInputValue: string,\n};\n\n/** Append flags */\nexport\ntype AppendFlags<State=MaskedState> = {\n  input?: boolean,\n  tail?: boolean,\n  raw?: boolean,\n  _beforeTailState?: State,\n};\n\n/** Extract flags */\nexport\ntype ExtractFlags = {\n  raw?: boolean\n};\n\n// see https://github.com/microsoft/TypeScript/issues/6223\n\nexport\ntype MaskedOptions<M extends Masked=Masked, Props extends keyof M=never> = Partial<Pick<M,\n  | 'mask'\n  | 'parent'\n  | 'prepare'\n  | 'prepareChar'\n  | 'validate'\n  | 'commit'\n  | 'format'\n  | 'parse'\n  | 'overwrite'\n  | 'eager'\n  | 'skipInvalid'\n  | Props\n>>;\n\n\n/** Provides common masking stuff */\nexport default\nabstract class Masked<Value=any> {\n  static DEFAULTS: Record<string, any> = {\n    skipInvalid: true,\n  } satisfies Partial<MaskedOptions>;\n  static EMPTY_VALUES: Array<any> = [undefined, null, ''];\n\n  /** */\n  declare mask: unknown;\n  /** */\n  declare parent?: Masked;\n  /** Transforms value before mask processing */\n  declare prepare?: (chars: string, masked: Masked, flags: AppendFlags) => string | [string, ChangeDetails];\n  /** Transforms each char before mask processing */\n  declare prepareChar?: (chars: string, masked: Masked, flags: AppendFlags) => string | [string, ChangeDetails];\n  /** Validates if value is acceptable */\n  declare validate?: (value: string, masked: Masked, flags: AppendFlags) => boolean;\n  /** Does additional processing at the end of editing */\n  declare commit?: (value: string, masked: Masked) => void;\n  /** Format typed value to string */\n  declare format?: (value: Value, masked: Masked) => string;\n  /** Parse string to get typed value */\n  declare parse?: (str: string, masked: Masked) => Value;\n  /** Enable characters overwriting */\n  abstract overwrite?: boolean | 'shift' | undefined;\n  /** */\n  abstract eager?: boolean | 'remove' | 'append' | undefined;\n  /** */\n  abstract skipInvalid?: boolean | undefined;\n\n  /** */\n  declare _initialized: boolean;\n\n  declare _value: string;\n  declare _refreshing?: boolean;\n  declare _isolated?: boolean;\n\n  constructor (opts: MaskedOptions) {\n    this._value = '';\n    this._update({\n      ...Masked.DEFAULTS,\n      ...opts,\n    });\n    this._initialized = true;\n  }\n\n  /** Sets and applies new options */\n  updateOptions (opts: Partial<MaskedOptions>) {\n    if (!Object.keys(opts).length) return;\n\n    this.withValueRefresh(this._update.bind(this, opts));\n  }\n\n  /** Sets new options */\n  _update (opts: Partial<MaskedOptions>) {\n    Object.assign(this, opts);\n  }\n\n  /** Mask state */\n  get state (): MaskedState {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue,\n    };\n  }\n\n  set state (state: MaskedState) {\n    this._value = state._value;\n  }\n\n  /** Resets value */\n  reset () {\n    this._value = '';\n  }\n\n  get value (): string {\n    return this._value;\n  }\n\n  set value (value: string) {\n    this.resolve(value, { input: true });\n  }\n\n  /** Resolve new value */\n  resolve (value: string, flags: AppendFlags={ input: true }): void {\n    this.reset();\n    this.append(value, flags, '');\n    this.doCommit();\n  }\n\n  get unmaskedValue (): string {\n    return this.value;\n  }\n\n  set unmaskedValue (value: string) {\n    this.resolve(value, {});\n  }\n\n  get typedValue (): Value {\n    return this.parse ? this.parse(this.value, this) : this.unmaskedValue as Value;\n  }\n\n  set typedValue (value: Value) {\n    if (this.format) {\n      this.value = this.format(value, this);\n    } else {\n      this.unmaskedValue = String(value);\n    }\n  }\n\n  /** Value that includes raw user input */\n  get rawInputValue (): string {\n    return this.extractInput(0, this.value.length, {raw: true});\n  }\n\n  set rawInputValue (value: string) {\n    this.resolve(value, { raw: true });\n  }\n\n  get displayValue (): string {\n    return this.value;\n  }\n\n  get isComplete (): boolean {\n    return true;\n  }\n\n  get isFilled (): boolean {\n    return this.isComplete;\n  }\n\n  /** Finds nearest input position in direction */\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\n    return cursorPos;\n  }\n\n  totalInputPositions (fromPos: number=0, toPos: number=this.value.length): number {\n    return Math.min(this.value.length, toPos - fromPos);\n  }\n\n  /** Extracts value in range considering flags */\n  extractInput (fromPos: number=0, toPos: number=this.value.length, flags?: ExtractFlags): string {\n    return this.value.slice(fromPos, toPos);\n  }\n\n  /** Extracts tail in range */\n  extractTail (fromPos: number=0, toPos: number=this.value.length): TailDetails {\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n  }\n\n  /** Appends tail */\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n\n    return (tail as TailDetails).appendTo(this);\n  }\n\n  /** Appends char */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (!ch) return new ChangeDetails();\n\n    this._value += ch;\n    return new ChangeDetails({\n      inserted: ch,\n      rawInserted: ch,\n    });\n  }\n\n  /** Appends char */\n  _appendChar (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): ChangeDetails {\n    const consistentState: MaskedState = this.state;\n    let details: ChangeDetails;\n    [ch, details] = this.doPrepareChar(ch, flags);\n\n    details = details.aggregate(this._appendCharRaw(ch, flags));\n\n    if (details.inserted) {\n      let consistentTail;\n      let appended = this.doValidate(flags) !== false;\n\n      if (appended && checkTail != null) {\n        // validation ok, check tail\n        const beforeTailState = this.state;\n        if (this.overwrite === true) {\n          consistentTail = checkTail.state;\n          checkTail.unshift(this.value.length - details.tailShift);\n        }\n\n        let tailDetails = this.appendTail(checkTail);\n        appended = tailDetails.rawInserted === checkTail.toString();\n\n        // not ok, try shift\n        if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n          this.state = beforeTailState;\n          consistentTail = checkTail.state;\n          checkTail.shift();\n\n          tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted === checkTail.toString();\n        }\n\n        // if ok, rollback state after tail\n        if (appended && tailDetails.inserted) this.state = beforeTailState;\n      }\n\n      // revert all if something went wrong\n      if (!appended) {\n        details = new ChangeDetails();\n        this.state = consistentState;\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\n      }\n    }\n    return details;\n  }\n\n  /** Appends optional placeholder at the end */\n  _appendPlaceholder (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  /** Appends optional eager placeholder at the end */\n  _appendEager (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  /** Appends symbols considering flags */\n  append (str: string, flags?: AppendFlags, tail?: string | String | TailDetails): ChangeDetails {\n    if (!isString(str)) throw new Error('value should be string');\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail as TailDetails;\n    if (flags?.tail) flags._beforeTailState = this.state;\n\n    let details;\n    [str, details] = this.doPrepare(str, flags);\n\n    for (let ci=0; ci<str.length; ++ci) {\n      const d = this._appendChar(str[ci], flags, checkTail);\n      if (!d.rawInserted && !this.doSkipInvalid(str[ci], flags, checkTail)) break;\n      details.aggregate(d);\n    }\n\n    if ((this.eager === true || this.eager === 'append') && flags?.input && str) {\n      details.aggregate(this._appendEager());\n    }\n\n    // append tail but aggregate only tailShift\n    if (checkTail != null) {\n      details.tailShift += this.appendTail(checkTail).tailShift;\n      // TODO it's a good idea to clear state after appending ends\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n      // this._resetBeforeTailState();\n    }\n\n    return details;\n  }\n\n  remove (fromPos: number=0, toPos: number=this.value.length): ChangeDetails {\n    this._value = this.value.slice(0, fromPos) + this.value.slice(toPos);\n    return new ChangeDetails();\n  }\n\n  /** Calls function and reapplies current value */\n  withValueRefresh<T>(fn: () => T): T {\n    if (this._refreshing || !this._initialized) return fn();\n    this._refreshing = true;\n\n    const rawInput = this.rawInputValue;\n    const value = this.value;\n\n    const ret = fn();\n\n    this.rawInputValue = rawInput;\n    // append lost trailing chars at the end\n    if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n      this.append(value.slice(this.value.length), {}, '');\n    }\n\n    delete this._refreshing;\n    return ret;\n  }\n\n  runIsolated<T>(fn: (masked: this) => T): T {\n    if (this._isolated || !this._initialized) return fn(this);\n    this._isolated = true;\n    const state = this.state;\n\n    const ret = fn(this);\n\n    this.state = state;\n    delete this._isolated;\n\n    return ret;\n  }\n\n  doSkipInvalid (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): boolean {\n    return Boolean(this.skipInvalid);\n  }\n\n  /** Prepares string before mask processing */\n  doPrepare (str: string, flags: AppendFlags={}): [string, ChangeDetails] {\n    return ChangeDetails.normalize(this.prepare ?\n      this.prepare(str, this, flags) :\n      str);\n  }\n\n  /** Prepares each char before mask processing */\n  doPrepareChar (str: string, flags: AppendFlags={}): [string, ChangeDetails] {\n    return ChangeDetails.normalize(this.prepareChar ?\n      this.prepareChar(str, this, flags) :\n      str);\n  }\n\n  /** Validates if value is acceptable */\n  doValidate (flags: AppendFlags): boolean {\n    return (!this.validate || this.validate(this.value, this, flags)) &&\n      (!this.parent || this.parent.doValidate(flags));\n  }\n\n  /** Does additional processing at the end of editing */\n  doCommit () {\n    if (this.commit) this.commit(this.value, this);\n  }\n\n  splice (start: number, deleteCount: number, inserted: string, removeDirection: Direction = DIRECTION.NONE, flags: AppendFlags = { input: true }): ChangeDetails {\n    const tailPos: number = start + deleteCount;\n    const tail: TailDetails = this.extractTail(tailPos);\n\n    const eagerRemove = this.eager === true || this.eager === 'remove';\n\n    let oldRawValue;\n    if (eagerRemove)  {\n      removeDirection = forceDirection(removeDirection);\n      oldRawValue = this.extractInput(0, tailPos, {raw: true});\n    }\n\n    let startChangePos: number = start;\n    const details: ChangeDetails = new ChangeDetails();\n\n    // if it is just deletion without insertion\n    if (removeDirection !== DIRECTION.NONE) {\n      startChangePos = this.nearestInputPos(start,\n        deleteCount > 1 && start !== 0 && !eagerRemove ?\n        DIRECTION.NONE :\n        removeDirection\n      );\n\n      // adjust tailShift if start was aligned\n      details.tailShift = startChangePos - start;\n    }\n\n    details.aggregate(this.remove(startChangePos));\n\n    if (eagerRemove && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n      if (removeDirection === DIRECTION.FORCE_LEFT) {\n        let valLength;\n        while (oldRawValue === this.rawInputValue && (valLength = this.value.length)) {\n          details\n            .aggregate(new ChangeDetails({ tailShift: -1 }))\n            .aggregate(this.remove(valLength-1));\n        }\n      } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n        tail.unshift();\n      }\n    }\n\n    return details.aggregate(this.append(inserted, flags, tail));\n  }\n\n  maskEquals (mask: any): boolean {\n    return this.mask === mask;\n  }\n\n  typedValueEquals (value: any): boolean {\n    const tval = this.typedValue;\n\n    return value === tval ||\n      Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) ||\n      (this.format ? this.format(value, this) === this.format(this.typedValue, this) : false);\n  }\n}\n\n\nIMask.Masked = Masked;\n","import type { TailDetails, AppendTail } from '../../core/tail-details';\nimport ChangeDetails from '../../core/change-details';\nimport { isString } from '../../core/utils';\nimport ContinuousTailDetails from '../../core/continuous-tail-details';\nimport IMask from '../../core/holder';\nimport type MaskedPattern from '../pattern';\n\n\nexport\ntype ChunksTailState = Pick<ChunksTailDetails,\n  | 'from'\n  | 'stop'\n  | 'blockIndex'\n> & { chunks: Array<TailDetails['state']> };\n\nexport default\nclass ChunksTailDetails implements TailDetails {\n  declare chunks: Array<TailDetails>;\n  declare from: number;\n  declare stop?: number;\n  /** */\n  declare blockIndex?: number;\n\n  constructor (chunks: Array<TailDetails>=[], from: number=0) {\n    this.chunks = chunks;\n    this.from = from;\n  }\n\n  toString (): string {\n    return this.chunks.map(String).join('');\n  }\n\n  extend (tailChunk: string | String | TailDetails): void {\n    if (!String(tailChunk)) return;\n    tailChunk = (isString(tailChunk) ? new ContinuousTailDetails(String(tailChunk)) : tailChunk) as TailDetails;\n\n    const lastChunk = this.chunks[this.chunks.length-1];\n    const extendLast = lastChunk &&\n      // if stops are same or tail has no stop\n      (lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n      // if tail chunk goes just after last chunk\n      tailChunk.from === (lastChunk.from + lastChunk.toString().length);\n\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift() as TailDetails;  // not possible to be `undefined` because length was checked above\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n\n  appendTo (masked: AppendTail | MaskedPattern): ChangeDetails {\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n\n    const details = new ChangeDetails();\n\n    for (let ci=0; ci < this.chunks.length && !details.skip; ++ci) {\n      const chunk = this.chunks[ci];\n\n      const lastBlockIter = masked._mapPosToBlock(masked.value.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null &&\n        // if block not found or stop is behind lastBlock\n        (!lastBlockIter || lastBlockIter.index <= stop)\n      ) {\n        if (\n          chunk instanceof ChunksTailDetails ||\n          // for continuous block also check if stop is exist\n          masked._stops.indexOf(stop) >= 0\n        ) {\n          const phDetails = masked._appendPlaceholder(stop);\n          details.aggregate(phDetails);\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        tailDetails.skip = false; // always ignore skip, it will be set on last\n        details.aggregate(tailDetails);\n        masked._value += tailDetails.inserted;\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, { tail: true }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), { tail: true }));\n      }\n    }\n\n    return details;\n  }\n\n  get state (): ChunksTailState {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex,\n    };\n  }\n\n  set state (state: ChunksTailState) {\n    const { chunks, ...props } = state;\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ?\n        new ChunksTailDetails() :\n        new ContinuousTailDetails();\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n\n  unshift (beforePos?: number): string {\n    if (!this.chunks.length || (beforePos != null && this.from >= beforePos)) return '';\n\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci=0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n\n  shift (): string {\n    if (!this.chunks.length) return '';\n\n    let ci=this.chunks.length-1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n}\n","import { DIRECTION } from '../../core/utils';\nimport type MaskedPattern from '../pattern';\nimport type PatternBlock from './block';\n\n\ntype PatternCursorState = { offset: number, index: number, ok: boolean };\n\nexport default\nclass PatternCursor<Value> {\n  declare masked: MaskedPattern<Value>;\n  declare offset: number;\n  declare index: number;\n  declare ok: boolean;\n  declare _log: PatternCursorState[];\n\n  constructor (masked: MaskedPattern<Value>, pos: number) {\n    this.masked = masked;\n    this._log = [];\n\n    const { offset, index } = masked._mapPosToBlock(pos) || (\n      pos < 0 ?\n        // first\n        { index: 0, offset: 0 } :\n        // last\n        { index: this.masked._blocks.length, offset: 0 }\n    );\n    this.offset = offset;\n    this.index = index;\n    this.ok = false;\n  }\n\n  get block (): PatternBlock {\n    return this.masked._blocks[this.index];\n  }\n\n  get pos (): number {\n    return this.masked._blockStartPos(this.index) + this.offset;\n  }\n\n  get state (): PatternCursorState {\n    return { index: this.index, offset: this.offset, ok: this.ok };\n  }\n\n  set state (s: PatternCursorState) {\n    Object.assign(this, s);\n  }\n\n  pushState () {\n    this._log.push(this.state);\n  }\n\n  popState (): PatternCursorState | undefined {\n    const s = this._log.pop();\n    if (s) this.state = s;\n    return s;\n  }\n\n  bindBlock () {\n    if (this.block) return;\n    if (this.index < 0) {\n      this.index = 0;\n      this.offset = 0;\n    }\n    if (this.index >= this.masked._blocks.length) {\n      this.index = this.masked._blocks.length - 1;\n      this.offset = (this.block as unknown as PatternBlock).value.length; // TODO this is stupid type error, `block` depends on index that was changed above\n    }\n  }\n\n  _pushLeft(fn: () => boolean | undefined): boolean {\n    this.pushState();\n    for (this.bindBlock(); 0<=this.index; --this.index, this.offset=this.block?.value.length || 0) {\n      if (fn()) return this.ok = true;\n    }\n\n    return this.ok = false;\n  }\n\n  _pushRight (fn: () => boolean | undefined): boolean {\n    this.pushState();\n    for (this.bindBlock(); this.index<this.masked._blocks.length; ++this.index, this.offset=0) {\n      if (fn()) return this.ok = true;\n    }\n\n    return this.ok = false;\n  }\n\n  pushLeftBeforeFilled (): boolean {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n      if (this.offset !== 0) return true;\n    });\n  }\n\n  pushLeftBeforeInput (): boolean {\n    // cases:\n    // filled input: 00|\n    // optional empty input: 00[]|\n    // nested block: XX<[]>|\n    return this._pushLeft(() => {\n      if (this.block.isFixed) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n\n  pushLeftBeforeRequired (): boolean {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n\n  pushRightBeforeFilled (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed || !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n      if (this.offset !== this.block.value.length) return true;\n    });\n  }\n\n  pushRightBeforeInput (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed) return;\n\n      // const o = this.offset;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n      // aa|X\n      // aa<X|[]>X_    - this will not work\n      // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n      return true;\n    });\n  }\n\n  pushRightBeforeRequired (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      // TODO check |[*]XX_\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      return true;\n    });\n  }\n}\n","import ChangeDetails from '../../core/change-details';\nimport { DIRECTION, type Direction, isString } from '../../core/utils';\nimport { type TailDetails } from '../../core/tail-details';\nimport ContinuousTailDetails from '../../core/continuous-tail-details';\nimport { type ExtractFlags, type AppendFlags, type MaskedState } from '../base';\nimport type PatternBlock from './block';\n\n\nexport\ntype PatternFixedDefinitionOptions = Pick<PatternFixedDefinition, 'char' | 'isUnmasking' | 'eager'>;\n\n\nexport default\nclass PatternFixedDefinition implements PatternBlock {\n  /** */\n  declare _value: string;\n  /** */\n  declare char: string;\n  /** */\n  declare isUnmasking?: boolean;\n  /** */\n  declare eager: boolean | 'remove' | 'append' | undefined;\n  /** */\n  declare _isRawInput?: boolean;\n  /** */\n  declare isFixed: boolean;\n\n  constructor(opts: PatternFixedDefinitionOptions) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n\n  get value (): string {\n    return this._value;\n  }\n\n  get unmaskedValue (): string {\n    return this.isUnmasking ? this.value : '';\n  }\n\n  get rawInputValue (): string {\n    return this._isRawInput ? this.value : '';\n  }\n\n  get displayValue (): string {\n    return this.value;\n  }\n\n  reset () {\n    this._isRawInput = false;\n    this._value = '';\n  }\n\n  remove (fromPos: number=0, toPos: number=this._value.length): ChangeDetails {\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n\n    return new ChangeDetails();\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    const minPos = 0;\n    const maxPos = this._value.length;\n\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n\n  totalInputPositions (fromPos: number=0, toPos: number=this._value.length): number {\n    return this._isRawInput ? (toPos - fromPos) : 0;\n  }\n\n  extractInput (fromPos: number=0, toPos: number=this._value.length, flags: ExtractFlags={}): string {\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n\n  get isComplete (): boolean {\n    return true;\n  }\n\n  get isFilled (): boolean {\n    return Boolean(this._value);\n  }\n\n  _appendChar (ch: string, flags: AppendFlags={}): ChangeDetails {\n    const details = new ChangeDetails();\n\n    if (this.isFilled) return details;\n    const appendEager = this.eager === true || this.eager === 'append';\n\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n    if (isResolved) details.rawInserted = this.char;\n    this._value = details.inserted = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n\n    return details;\n  }\n\n  _appendEager (): ChangeDetails {\n    return this._appendChar(this.char, { tail: true });\n  }\n\n  _appendPlaceholder (): ChangeDetails {\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n\n    this._value = details.inserted = this.char;\n    return details;\n  }\n\n  extractTail (): TailDetails {\n    return new ContinuousTailDetails('');\n  }\n\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n\n    return (tail as TailDetails).appendTo(this);\n  }\n\n  append (str: string, flags?: AppendFlags, tail?: TailDetails): ChangeDetails {\n    const details = this._appendChar(str[0], flags);\n\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n\n    return details;\n  }\n\n  doCommit () {}\n\n  get state (): MaskedState {\n    return {\n      _value: this._value,\n      _rawInputValue: this.rawInputValue,\n    };\n  }\n\n  set state (state: MaskedState) {\n    this._value = state._value;\n    this._isRawInput = Boolean(state._rawInputValue);\n  }\n}\n","import createMask, { type FactoryArg, type FactoryOpts, type FactoryReturnMasked } from '../factory';\nimport type Masked from '../base';\nimport type MaskedPattern from '../pattern';\nimport { type TailDetails } from '../../core/tail-details';\nimport { type ExtractFlags, type AppendFlags, type MaskedState } from '../base';\nimport ChangeDetails from '../../core/change-details';\nimport { DIRECTION, type Direction } from '../../core/utils';\nimport type PatternBlock from './block';\n\n\nexport\ntype PatternInputDefinitionOptions<Opts extends FactoryOpts> =\n  Omit<Opts,\n  | 'parent'\n  | 'isOptional'\n  | 'lazy'\n  | 'eager'\n  | 'placeholderChar'\n  | 'displayChar'> &\n  Partial<Pick<PatternInputDefinition,\n  | 'parent'\n  | 'isOptional'\n  | 'lazy'\n  | 'eager'\n  | 'placeholderChar'\n  | 'displayChar'\n>>;\n\nexport\ntype PatternInputDefinitionState<Opts extends FactoryArg> = MaskedState & {\n  masked: FactoryReturnMasked<Opts>['state'],\n  isFilled: boolean,\n};\n\n\nexport default\nclass PatternInputDefinition<Opts extends FactoryOpts=any> implements PatternBlock<PatternInputDefinitionState<Opts>> {\n  static DEFAULT_DEFINITIONS: { [k: string]: RegExp } = {\n    '0': /\\d/,\n    'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\n    '*': /./\n  }\n\n  /** */\n  declare readonly masked: FactoryReturnMasked<Opts>;\n  /** */\n  declare parent: Masked;\n  /** */\n  declare isOptional: boolean;\n  /** */\n  declare isFilled: boolean;\n  /** */\n  declare lazy: MaskedPattern['lazy'];\n  /** */\n  declare eager: MaskedPattern['eager'];\n  /** */\n  declare placeholderChar: MaskedPattern['placeholderChar'];\n  /** */\n  declare displayChar: MaskedPattern['displayChar'];\n\n  constructor(opts: PatternInputDefinitionOptions<Opts>) {\n    const { parent, isOptional, placeholderChar, displayChar, lazy, eager, ...maskOpts } = opts;\n\n    this.masked = createMask(maskOpts as Opts);\n    Object.assign(this, { parent, isOptional, placeholderChar, displayChar, lazy, eager });\n  }\n\n  reset () {\n    this.isFilled = false;\n    this.masked.reset();\n  }\n\n  remove (fromPos: number=0, toPos: number=this.value.length): ChangeDetails {\n    if (fromPos === 0 && toPos >= 1) {\n      this.isFilled = false;\n      return this.masked.remove(fromPos, toPos);\n    }\n\n    return new ChangeDetails();\n  }\n\n  get value (): string {\n    return this.masked.value ||\n      (this.isFilled && !this.isOptional ?\n        this.placeholderChar :\n        '');\n  }\n\n  get unmaskedValue (): string {\n    return this.masked.unmaskedValue;\n  }\n\n  get rawInputValue (): string {\n    return this.masked.rawInputValue;\n  }\n\n  get displayValue (): string {\n    return this.masked.value && this.displayChar || this.value;\n  }\n\n  get isComplete (): boolean {\n    return Boolean(this.masked.value) || this.isOptional;\n  }\n\n  _appendChar (ch: string, flags: AppendFlags<PatternInputDefinitionState<Opts>>={}): ChangeDetails {\n    if (this.isFilled) return new ChangeDetails();\n\n    const state = this.masked.state;\n    // simulate input\n    const details = this.masked._appendChar(ch, this.currentMaskFlags(flags));\n\n    if (details.inserted && this.doValidate(flags) === false) {\n      details.inserted = details.rawInserted = '';\n      this.masked.state = state;\n    }\n\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n      details.inserted = this.placeholderChar;\n    }\n    details.skip = !details.inserted && !this.isOptional;\n    this.isFilled = Boolean(details.inserted);\n\n    return details;\n  }\n\n  append (str: string, flags?: AppendFlags<PatternInputDefinitionState<Opts>>, tail?: TailDetails): ChangeDetails {\n    // TODO probably should be done via _appendChar\n    return this.masked.append(str, this.currentMaskFlags(flags), tail);\n  }\n\n  _appendPlaceholder (): ChangeDetails {\n    const details = new ChangeDetails();\n\n    if (this.isFilled || this.isOptional) return details;\n\n    this.isFilled = true;\n    details.inserted = this.placeholderChar;\n    return details;\n  }\n\n  _appendEager (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  extractTail (fromPos?: number, toPos?: number): TailDetails {\n    return this.masked.extractTail(fromPos, toPos);\n  }\n\n  appendTail (tail: string | TailDetails): ChangeDetails {\n    return this.masked.appendTail(tail);\n  }\n\n  extractInput (fromPos: number=0, toPos: number=this.value.length, flags?: ExtractFlags): string {\n    return this.masked.extractInput(fromPos, toPos, flags);\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    const minPos = 0;\n    const maxPos = this.value.length;\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return this.isComplete ? boundPos : minPos;\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        return this.isComplete ? boundPos : maxPos;\n      case DIRECTION.NONE:\n      default: return boundPos;\n    }\n  }\n\n  totalInputPositions (fromPos: number=0, toPos: number=this.value.length): number {\n    return this.value.slice(fromPos, toPos).length;\n  }\n\n  doValidate (flags: AppendFlags<PatternInputDefinitionState<Opts>>): boolean {\n    return this.masked.doValidate(this.currentMaskFlags(flags)) && (\n      !this.parent || this.parent.doValidate(this.currentMaskFlags(flags)));\n  }\n\n  doCommit () {\n    this.masked.doCommit();\n  }\n\n  get state (): PatternInputDefinitionState<Opts> {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue,\n      masked: this.masked.state,\n      isFilled: this.isFilled,\n    };\n  }\n\n  set state (state: PatternInputDefinitionState<Opts>) {\n    this.masked.state = state.masked;\n    this.isFilled = state.isFilled;\n  }\n\n  currentMaskFlags (flags?: AppendFlags<PatternInputDefinitionState<Opts>>): AppendFlags {\n    return {\n      ...flags,\n      _beforeTailState: flags?._beforeTailState?.masked || flags?._beforeTailState as unknown as MaskedState,\n    };\n  }\n}\n","import Masked, { type MaskedOptions } from './base';\nimport IMask from '../core/holder';\n\n\nexport\ntype MaskedRegExpOptions = MaskedOptions<MaskedRegExp>;\n\n/** Masking by RegExp */\nexport default\nclass MaskedRegExp extends Masked<string> {\n  /** */\n  declare mask: RegExp;\n  /** Enable characters overwriting */\n  declare overwrite?: boolean | 'shift' | undefined;\n  /** */\n  declare eager?: boolean | 'remove' | 'append' | undefined;\n  /** */\n  declare skipInvalid?: boolean | undefined;\n\n  override updateOptions (opts: Partial<MaskedRegExpOptions>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedRegExpOptions>) {\n    const mask = opts.mask;\n    if (mask) opts.validate = (value) => value.search(mask) >= 0;\n    super._update(opts);\n  }\n}\n\n\nIMask.MaskedRegExp = MaskedRegExp;\n","import ChangeDetails from '../core/change-details';\nimport IMask from '../core/holder';\nimport { type TailDetails } from '../core/tail-details';\nimport { DIRECTION, type Direction } from '../core/utils';\nimport Masked, { type AppendFlags, type ExtractFlags, type MaskedOptions, type MaskedState } from './base';\nimport createMask, { type FactoryArg, normalizeOpts } from './factory';\nimport type PatternBlock from './pattern/block';\nimport ChunksTailDetails from './pattern/chunk-tail-details';\nimport PatternCursor from './pattern/cursor';\nimport PatternFixedDefinition from './pattern/fixed-definition';\nimport PatternInputDefinition from './pattern/input-definition';\nimport './regexp'; // support for default definitions which are regexp's\n\n\nexport\ntype MaskedPatternOptions<\n  Value=string,\n  M extends MaskedPattern<Value>=MaskedPattern<Value>,\n  Props extends keyof M=never,\n> = MaskedOptions<M,\n  | 'definitions'\n  | 'blocks'\n  | 'placeholderChar'\n  | 'displayChar'\n  | 'lazy'\n  | Props\n>;\n\nexport\ntype Definitions = {\n  [k: string]: FactoryArg,\n};\n\nexport\ntype MaskedPatternState = MaskedState & {\n  _blocks: Array<MaskedState>,\n};\n\nexport\ntype BlockPosData = {\n  index: number,\n  offset: number,\n};\n\n\n/** Pattern mask */\nexport default\nclass MaskedPattern<Value=string> extends Masked<Value> {\n  static DEFAULTS: Record<string, any> = {\n    lazy: true,\n    placeholderChar: '_'\n  } satisfies Partial<MaskedPattern>;\n  static STOP_CHAR = '`';\n  static ESCAPE_CHAR = '\\\\';\n  static InputDefinition = PatternInputDefinition;\n  static FixedDefinition = PatternFixedDefinition;\n\n  declare mask: string;\n  /** */\n  declare blocks: { [key: string]: FactoryArg };\n  /** */\n  declare definitions: Definitions;\n  /** Single char for empty input */\n  declare placeholderChar: string;\n  /** Single char for filled input */\n  declare displayChar: string;\n  /** Show placeholder only when needed */\n  declare lazy: boolean;\n  /** Enable characters overwriting */\n  declare overwrite?: boolean | 'shift' | undefined;\n  /** */\n  declare eager?: boolean | 'remove' | 'append' | undefined;\n  /** */\n  declare skipInvalid?: boolean | undefined;\n\n  declare _blocks: Array<PatternBlock>;\n  declare _maskedBlocks: {[key: string]: Array<number>};\n  declare _stops: Array<number>;\n\n  constructor (opts: MaskedPatternOptions<Value>) {\n    super({\n      ...MaskedPattern.DEFAULTS,\n      ...opts,\n      definitions: Object.assign({}, PatternInputDefinition.DEFAULT_DEFINITIONS, opts?.definitions),\n    } as MaskedOptions);\n  }\n\n  override updateOptions (opts: Partial<MaskedPatternOptions<Value>>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedPatternOptions<Value>>) {\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n    super._update(opts);\n    this._rebuildMask();\n  }\n\n  _rebuildMask () {\n    const defs = this.definitions;\n    this._blocks = [];\n    this._stops = [];\n    this._maskedBlocks = {};\n\n    const pattern = this.mask;\n    if (!pattern || !defs) return;\n\n    let unmaskingBlock = false;\n    let optionalBlock = false;\n\n    for (let i=0; i<pattern.length; ++i) {\n      if (this.blocks) {\n        const p = pattern.slice(i);\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n        // order by key length\n        bNames.sort((a, b) => b.length - a.length);\n        // use block name with max length\n        const bName = bNames[0];\n        if (bName) {\n          const maskedBlock = createMask({\n            lazy: this.lazy,\n            eager: this.eager,\n            placeholderChar: this.placeholderChar,\n            displayChar: this.displayChar,\n            overwrite: this.overwrite,\n            ...normalizeOpts(this.blocks[bName]),\n            parent: this,\n          });\n\n          if (maskedBlock) {\n            this._blocks.push(maskedBlock);\n\n            // store block index\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\n          }\n\n          i += bName.length - 1;\n          continue;\n        }\n      }\n\n      let char = pattern[i];\n      let isInput = char in defs;\n\n      if (char === MaskedPattern.STOP_CHAR) {\n        this._stops.push(this._blocks.length);\n        continue;\n      }\n\n      if (char === '{' || char === '}') {\n        unmaskingBlock = !unmaskingBlock;\n        continue;\n      }\n\n      if (char === '[' || char === ']') {\n        optionalBlock = !optionalBlock;\n        continue;\n      }\n\n      if (char === MaskedPattern.ESCAPE_CHAR) {\n        ++i;\n        char = pattern[i];\n        if (!char) break;\n        isInput = false;\n      }\n\n      const def = isInput ?\n        new PatternInputDefinition({\n          isOptional: optionalBlock,\n          lazy: this.lazy,\n          eager: this.eager,\n          placeholderChar: this.placeholderChar,\n          displayChar: this.displayChar,\n          ...normalizeOpts(defs[char]),\n          parent: this,\n        }) as PatternBlock :\n        new PatternFixedDefinition({\n          char,\n          eager: this.eager,\n          isUnmasking: unmaskingBlock,\n        });\n\n      this._blocks.push(def);\n    }\n  }\n\n  get state (): MaskedPatternState {\n    return {\n      ...super.state,\n      _blocks: this._blocks.map(b => b.state),\n    };\n  }\n\n  set state (state: MaskedPatternState) {\n    const {_blocks, ...maskedState} = state;\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n    super.state = maskedState;\n  }\n\n  reset () {\n    super.reset();\n    this._blocks.forEach(b => b.reset());\n  }\n\n  get isComplete (): boolean {\n    return this._blocks.every(b => b.isComplete);\n  }\n\n  get isFilled (): boolean {\n    return this._blocks.every(b => b.isFilled);\n  }\n\n  get isFixed (): boolean {\n    return this._blocks.every(b => b.isFixed);\n  }\n\n  get isOptional (): boolean {\n    return this._blocks.every(b => b.isOptional);\n  }\n\n  doCommit () {\n    this._blocks.forEach(b => b.doCommit());\n    super.doCommit();\n  }\n\n  get unmaskedValue (): string {\n    return this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  get value (): string {\n    // TODO return _value when not in change?\n    return this._blocks.reduce((str, b) => str += b.value, '');\n  }\n\n  set value (value: string) {\n    super.value = value;\n  }\n\n  get displayValue (): string {\n    return this._blocks.reduce((str, b) => str += b.displayValue, '');\n  }\n\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\n  }\n\n  _appendEager (): ChangeDetails {\n    const details = new ChangeDetails();\n\n    let startBlockIndex = this._mapPosToBlock(this.value.length)?.index;\n    if (startBlockIndex == null) return details;\n\n    // TODO test if it works for nested pattern masks\n    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n\n    for (let bi=startBlockIndex; bi<this._blocks.length; ++bi) {\n      const d = this._blocks[bi]._appendEager();\n      if (!d.inserted) break;\n\n      details.aggregate(d);\n    }\n\n    return details;\n  }\n\n  _appendCharRaw (ch: string, flags: AppendFlags<MaskedPatternState>={}): ChangeDetails {\n    const blockIter = this._mapPosToBlock(this.value.length);\n    const details = new ChangeDetails();\n    if (!blockIter) return details;\n\n    for (let bi=blockIter.index; ; ++bi) {\n      const block = this._blocks[bi];\n      if (!block) break;\n\n      const blockDetails = block._appendChar(ch, { ...flags, _beforeTailState: flags._beforeTailState?._blocks?.[bi] });\n\n      const skip = blockDetails.skip;\n      details.aggregate(blockDetails);\n\n      if (skip || blockDetails.rawInserted) break; // go next char\n    }\n\n    return details;\n  }\n\n  extractTail (fromPos: number=0, toPos: number=this.value.length): ChunksTailDetails {\n    const chunkTail = new ChunksTailDetails();\n    if (fromPos === toPos) return chunkTail;\n\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n      const blockChunk = b.extractTail(bFromPos, bToPos);\n      blockChunk.stop = this._findStopBefore(bi);\n      blockChunk.from = this._blockStartPos(bi);\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n\n      chunkTail.extend(blockChunk);\n    });\n\n    return chunkTail;\n  }\n\n  extractInput (fromPos: number=0, toPos: number=this.value.length, flags: ExtractFlags={}): string {\n    if (fromPos === toPos) return '';\n\n    let input = '';\n\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n      input += b.extractInput(fromPos, toPos, flags);\n    });\n\n    return input;\n  }\n\n  _findStopBefore (blockIndex: number): number | undefined {\n    let stopBefore;\n    for (let si=0; si<this._stops.length; ++si) {\n      const stop = this._stops[si];\n      if (stop <= blockIndex) stopBefore = stop;\n      else break;\n    }\n    return stopBefore;\n  }\n\n  /** Appends placeholder depending on laziness */\n  _appendPlaceholder (toBlockIndex?: number): ChangeDetails {\n    const details = new ChangeDetails();\n    if (this.lazy && toBlockIndex == null) return details;\n\n    const startBlockIter = this._mapPosToBlock(this.value.length);\n    if (!startBlockIter) return details;\n\n    const startBlockIndex = startBlockIter.index;\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n\n    this._blocks.slice(startBlockIndex, endBlockIndex)\n      .forEach(b => {\n        if (!b.lazy || toBlockIndex != null) {\n          const bDetails = b._appendPlaceholder((b as MaskedPattern)._blocks?.length);\n          this._value += bDetails.inserted;\n          details.aggregate(bDetails);\n        }\n      });\n\n    return details;\n  }\n\n  /** Finds block in pos */\n  _mapPosToBlock (pos: number): BlockPosData | undefined {\n    let accVal = '';\n    for (let bi=0; bi<this._blocks.length; ++bi) {\n      const block = this._blocks[bi];\n      const blockStartPos = accVal.length;\n\n      accVal += block.value;\n\n      if (pos <= accVal.length) {\n        return {\n          index: bi,\n          offset: pos - blockStartPos,\n        };\n      }\n    }\n  }\n\n  _blockStartPos (blockIndex: number): number {\n    return this._blocks\n      .slice(0, blockIndex)\n      .reduce((pos, b) => pos += b.value.length, 0);\n  }\n\n  _forEachBlocksInRange (fromPos: number, toPos: number=this.value.length, fn: (block: PatternBlock, blockIndex: number, fromPos: number, toPos: number) => void) {\n    const fromBlockIter = this._mapPosToBlock(fromPos);\n\n    if (fromBlockIter) {\n      const toBlockIter = this._mapPosToBlock(toPos);\n      // process first block\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n      const fromBlockStartPos = fromBlockIter.offset;\n      const fromBlockEndPos = toBlockIter && isSameBlock ?\n        toBlockIter.offset :\n        this._blocks[fromBlockIter.index].value.length;\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n\n      if (toBlockIter && !isSameBlock) {\n        // process intermediate blocks\n        for (let bi=fromBlockIter.index+1; bi<toBlockIter.index; ++bi) {\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].value.length);\n        }\n\n        // process last block\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n      }\n    }\n  }\n\n  remove (fromPos: number=0, toPos: number=this.value.length): ChangeDetails {\n    const removeDetails = super.remove(fromPos, toPos);\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\n    });\n    return removeDetails;\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    if (!this._blocks.length) return 0;\n    const cursor = new PatternCursor(this, cursorPos);\n\n    if (direction === DIRECTION.NONE) {\n      // -------------------------------------------------\n      // NONE should only go out from fixed to the right!\n      // -------------------------------------------------\n      if (cursor.pushRightBeforeInput()) return cursor.pos;\n      cursor.popState();\n      if (cursor.pushLeftBeforeInput()) return cursor.pos;\n      return this.value.length;\n    }\n\n    // FORCE is only about a|* otherwise is 0\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n      // try to break fast when *|a\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeFilled();\n        if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n        cursor.popState();\n      }\n\n      // forward flow\n      cursor.pushLeftBeforeInput();\n      cursor.pushLeftBeforeRequired();\n      cursor.pushLeftBeforeFilled();\n\n      // backward flow\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n      }\n      if (cursor.ok) return cursor.pos;\n      if (direction === DIRECTION.FORCE_LEFT) return 0;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      return 0;\n    }\n\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n      // forward flow\n      cursor.pushRightBeforeInput();\n      cursor.pushRightBeforeRequired();\n\n      if (cursor.pushRightBeforeFilled()) return cursor.pos;\n      if (direction === DIRECTION.FORCE_RIGHT) return this.value.length;\n\n      // backward flow\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n    }\n\n    return cursorPos;\n  }\n\n  totalInputPositions (fromPos: number=0, toPos: number=this.value.length): number {\n    let total = 0;\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      total += b.totalInputPositions(bFromPos, bToPos);\n    });\n    return total;\n  }\n\n  /** Get block by name */\n  maskedBlock (name: string): PatternBlock | undefined {\n    return this.maskedBlocks(name)[0];\n  }\n\n  /** Get all blocks by name */\n  maskedBlocks (name: string): Array<PatternBlock> {\n    const indices = this._maskedBlocks[name];\n    if (!indices) return [];\n    return indices.map(gi => this._blocks[gi]);\n  }\n}\n\n\nIMask.MaskedPattern = MaskedPattern;\n","import ChangeDetails from '../core/change-details';\nimport IMask from '../core/holder';\nimport { type AppendFlags } from './base';\nimport MaskedPattern, { type MaskedPatternOptions } from './pattern';\n\n\ntype MaskedRangePatternOptions = MaskedPatternOptions &\n  Pick<MaskedRange, 'from' | 'to' | 'autofix'> &\n  Partial<Pick<MaskedRange, 'maxLength'>>;\n\nexport\ntype MaskedRangeOptions = Omit<MaskedRangePatternOptions, 'mask'>;\n\n\n/** Pattern which accepts ranges */\nexport default\nclass MaskedRange extends MaskedPattern {\n  /**\n    Optionally sets max length of pattern.\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n  */\n  declare maxLength: number;\n  /** Min bound */\n  declare from: number;\n  /** Max bound */\n  declare to: number;\n  /** */\n  declare autofix?: boolean | 'pad';\n\n  get _matchFrom (): number {\n    return this.maxLength - String(this.from).length;\n  }\n\n  constructor (opts?: MaskedRangeOptions) {\n    super(opts as MaskedPatternOptions); // mask will be created in _update\n  }\n\n  override updateOptions (opts: Partial<MaskedRangeOptions>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedRangeOptions>) {\n    const {\n      to=this.to || 0,\n      from=this.from || 0,\n      maxLength=this.maxLength || 0,\n      autofix=this.autofix,\n      ...patternOpts\n    }: Partial<MaskedRangePatternOptions> = opts;\n\n    this.to = to;\n    this.from = from;\n    this.maxLength = Math.max(String(to).length, maxLength);\n    this.autofix = autofix;\n\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    let sameCharsCount = 0;\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n    patternOpts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(this.maxLength - sameCharsCount);\n\n    super._update(patternOpts);\n  }\n\n  override get isComplete (): boolean {\n    return super.isComplete && Boolean(this.value);\n  }\n\n  boundaries (str: string): [string, string] {\n    let minstr = '';\n    let maxstr = '';\n\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n    if (num) {\n      minstr = '0'.repeat(placeholder.length) + num;\n      maxstr = '9'.repeat(placeholder.length) + num;\n    }\n    minstr = minstr.padEnd(this.maxLength, '0');\n    maxstr = maxstr.padEnd(this.maxLength, '9');\n\n    return [minstr, maxstr];\n  }\n\n  override doPrepareChar (ch: string, flags: AppendFlags={}): [string, ChangeDetails] {\n    let details: ChangeDetails;\n    [ch, details] = super.doPrepareChar(ch.replace(/\\D/g, ''), flags);\n\n    if (!this.autofix || !ch) return [ch, details];\n\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n\n    const nextVal = this.value + ch;\n    if (nextVal.length > this.maxLength) return ['', details];\n\n    const [minstr, maxstr] = this.boundaries(nextVal);\n\n    if (Number(maxstr) < this.from) return [fromStr[nextVal.length - 1], details];\n\n    if (Number(minstr) > this.to) {\n      if (this.autofix === 'pad' && nextVal.length < this.maxLength) {\n        return ['', details.aggregate(this.append(fromStr[nextVal.length - 1]+ch, flags))];\n      }\n      return [toStr[nextVal.length - 1], details];\n    }\n\n    return [ch, details];\n  }\n\n  override doValidate (flags: AppendFlags): boolean {\n    const str = this.value;\n\n    const firstNonZero = str.search(/[^0]/);\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n\n    const [minstr, maxstr] = this.boundaries(str);\n\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to &&\n      super.doValidate(flags);\n  }\n}\n\n\nIMask.MaskedRange = MaskedRange;\n","import MaskedPattern, { type MaskedPatternOptions } from './pattern';\nimport { type MaskedRangeOptions } from './range';\nimport MaskedRange from './range';\nimport IMask from '../core/holder';\nimport type Masked from './base';\nimport { type AppendFlags } from './base';\nimport { isString } from '../core/utils';\n\n\nexport\ntype DateMaskType = DateConstructor;\n\ntype DateOptionsKeys =\n  | 'pattern'\n  | 'min'\n  | 'max'\n  | 'autofix'\n;\n\nexport\ntype DateValue = Date | null;\n\nexport\ntype MaskedDateOptions =\n  Omit<MaskedPatternOptions<DateValue>, 'mask'> &\n  Partial<Pick<MaskedDate, DateOptionsKeys>> &\n  { mask?: string | DateMaskType }\n;\n\n/** Date mask */\nexport default\nclass MaskedDate extends MaskedPattern<DateValue> {\n  static GET_DEFAULT_BLOCKS: () => { [k: string]: MaskedRangeOptions } = () => ({\n    d: {\n      mask: MaskedRange,\n      from: 1,\n      to: 31,\n      maxLength: 2,\n    },\n    m: {\n      mask: MaskedRange,\n      from: 1,\n      to: 12,\n      maxLength: 2,\n    },\n    Y: {\n      mask: MaskedRange,\n      from: 1900,\n      to: 9999,\n    }\n  });\n  static DEFAULTS: Record<string, any> = {\n    mask: Date,\n    pattern: 'd{.}`m{.}`Y',\n    format: (date: DateValue, masked: Masked): string => {\n      if (!date) return '';\n\n      const day = String(date.getDate()).padStart(2, '0');\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const year = date.getFullYear();\n\n      return [day, month, year].join('.');\n    },\n    parse: (str: string, masked: Masked): DateValue => {\n      const [day, month, year] = str.split('.').map(Number);\n      return new Date(year, month - 1, day);\n    },\n  } satisfies Partial<MaskedDateOptions>;\n\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n  declare pattern: string;\n  /** Start date */\n  declare min?: Date;\n  /** End date */\n  declare max?: Date;\n  /** */\n  declare autofix?: boolean | 'pad' | undefined;\n  /** Format typed value to string */\n  declare format: (value: DateValue, masked: Masked) => string;\n  /** Parse string to get typed value */\n  declare parse: (str: string, masked: Masked) => DateValue;\n\n  constructor (opts?: MaskedDateOptions) {\n    const { mask, pattern, ...patternOpts } = {\n      ...(MaskedDate.DEFAULTS as MaskedDateOptions),\n      ...opts,\n    };\n\n    super({\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern,\n    });\n  }\n\n  override updateOptions (opts: Partial<MaskedDateOptions>) {\n    super.updateOptions(opts as Partial<MaskedPatternOptions<DateValue>>);\n  }\n\n  override _update (opts: Partial<MaskedDateOptions>) {\n    const { mask, pattern, blocks, ...patternOpts } = {\n      ...MaskedDate.DEFAULTS,\n      ...opts,\n    };\n\n    const patternBlocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n    // adjust year block\n    if (opts.min) patternBlocks.Y.from = opts.min.getFullYear();\n    if (opts.max) patternBlocks.Y.to = opts.max.getFullYear();\n    if (opts.min && opts.max && patternBlocks.Y.from === patternBlocks.Y.to\n    ) {\n      patternBlocks.m.from = opts.min.getMonth() + 1;\n      patternBlocks.m.to = opts.max.getMonth() + 1;\n\n      if (patternBlocks.m.from === patternBlocks.m.to) {\n        patternBlocks.d.from = opts.min.getDate();\n        patternBlocks.d.to = opts.max.getDate();\n      }\n    }\n    Object.assign(patternBlocks, this.blocks, blocks);\n\n    // add autofix\n    Object.keys(patternBlocks).forEach(bk => {\n      const b = patternBlocks[bk];\n      if (!('autofix' in b) && 'autofix' in opts) b.autofix = opts.autofix;\n    });\n\n    super._update({\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern,\n      blocks: patternBlocks,\n    });\n  }\n\n  override doValidate (flags: AppendFlags): boolean {\n    const date = this.date;\n\n    return super.doValidate(flags) &&\n      (!this.isComplete ||\n        this.isDateExist(this.value) && date != null &&\n        (this.min == null || this.min <= date) &&\n        (this.max == null || date <= this.max));\n  }\n\n  /** Checks if date is exists */\n  isDateExist (str: string): boolean {\n    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n  }\n\n  /** Parsed Date */\n  get date (): DateValue {\n    return this.typedValue;\n  }\n  set date (date: DateValue) {\n    this.typedValue = date;\n  }\n\n  override get typedValue (): DateValue {\n    return this.isComplete ? super.typedValue : null;\n  }\n  override set typedValue (value: DateValue) {\n    super.typedValue = value;\n  }\n\n  override maskEquals (mask: any): boolean {\n    return mask === Date || super.maskEquals(mask);\n  }\n}\n\n\nIMask.MaskedDate = MaskedDate;\n","import { objectIncludes } from '../core/utils';\nimport ChangeDetails from '../core/change-details';\nimport createMask, { type FactoryArg, normalizeOpts } from './factory';\nimport Masked, { type AppendFlags, type MaskedState, type MaskedOptions, type ExtractFlags } from './base';\nimport { DIRECTION, type Direction } from '../core/utils';\nimport { type TailDetails } from '../core/tail-details';\nimport IMask from '../core/holder';\n\n\ntype MaskedDynamicNoRefState = MaskedState & {\n  compiledMasks: Array<MaskedState>\n};\n\ntype MaskedDynamicRefState = MaskedDynamicNoRefState & {\n  currentMaskRef: Masked,\n  currentMask: MaskedState,\n};\n\nexport\ntype MaskedDynamicState = MaskedDynamicNoRefState | MaskedDynamicRefState;\n\nexport\ntype DynamicMaskType = Array<FactoryArg> | ArrayConstructor;\n\nexport\ntype MaskedDynamicOptions = MaskedOptions<MaskedDynamic, 'dispatch'>;\n\ntype HandleState = MaskedDynamicState | MaskedState;\n\n/** Dynamic mask for choosing appropriate mask in run-time */\nexport default\nclass MaskedDynamic<Value=any> extends Masked<Value> {\n  static DEFAULTS: Partial<MaskedDynamicOptions>;\n\n  declare mask: DynamicMaskType;\n  /** Currently chosen mask */\n  declare currentMask?: Masked;\n  /** Compliled {@link Masked} options */\n  declare compiledMasks: Array<Masked>;\n  /** Chooses {@link Masked} depending on input value */\n  declare dispatch: (appended: string, masked: MaskedDynamic, flags: AppendFlags<HandleState>, tail: string | String | TailDetails) => (Masked | undefined);\n\n  declare _overwrite?: this['overwrite'];\n  declare _eager?: this['eager'];\n  declare _skipInvalid?: this['skipInvalid'];\n\n  constructor (opts?: MaskedDynamicOptions) {\n    super({\n      ...MaskedDynamic.DEFAULTS,\n      ...opts\n    });\n\n    this.currentMask = undefined;\n  }\n\n  override updateOptions (opts: Partial<MaskedDynamicOptions>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedDynamicOptions>) {\n    super._update(opts);\n\n    if ('mask' in opts) {\n      // mask could be totally dynamic with only `dispatch` option\n      this.compiledMasks = Array.isArray(opts.mask) ?\n        opts.mask.map(m => createMask({\n          overwrite: this._overwrite,\n          eager: this._eager,\n          skipInvalid: this._skipInvalid,\n          ...normalizeOpts(m),\n        })) :\n        [];\n\n      // this.currentMask = this.doDispatch(''); // probably not needed but lets see\n    }\n  }\n\n  override _appendCharRaw (ch: string, flags: AppendFlags<HandleState>={}): ChangeDetails {\n    const details = this._applyDispatch(ch, flags);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n    }\n\n    return details;\n  }\n\n  _applyDispatch (appended: string='', flags: AppendFlags<HandleState>={}, tail: string | String | TailDetails = ''): ChangeDetails {\n    const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ?\n      flags._beforeTailState._value :\n      this.value;\n    const inputValue = this.rawInputValue;\n    const insertValue = flags.tail && flags._beforeTailState != null ?\n      flags._beforeTailState._rawInputValue :\n      inputValue;\n    const tailValue = inputValue.slice(insertValue.length);\n    const prevMask = this.currentMask;\n    const details = new ChangeDetails();\n\n    const prevMaskState = prevMask?.state;\n\n    // clone flags to prevent overwriting `_beforeTailState`\n    this.currentMask = this.doDispatch(appended, { ...flags }, tail);\n\n    // restore state after dispatch\n    if (this.currentMask) {\n      if (this.currentMask !== prevMask) {\n        // if mask changed reapply input\n        this.currentMask.reset();\n\n        if (insertValue) {\n          const d = this.currentMask.append(insertValue, {raw: true});\n          details.tailShift = d.inserted.length - prevValueBeforeTail.length;\n        }\n\n        if (tailValue) {\n          details.tailShift += this.currentMask.append(tailValue, {raw: true, tail: true}).tailShift;\n        }\n      } else if (prevMaskState) {\n        // Dispatch can do something bad with state, so\n        // restore prev mask state\n        this.currentMask.state = prevMaskState;\n      }\n    }\n\n    return details;\n  }\n\n  override _appendPlaceholder (): ChangeDetails {\n    const details = this._applyDispatch();\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendPlaceholder());\n    }\n\n    return details;\n  }\n\n  override _appendEager (): ChangeDetails {\n    const details = this._applyDispatch();\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendEager());\n    }\n\n    return details;\n  }\n\n  override appendTail (tail: string | String | TailDetails): ChangeDetails {\n    const details = new ChangeDetails();\n    if (tail) details.aggregate(this._applyDispatch('', {}, tail));\n\n    return details.aggregate(this.currentMask ?\n      this.currentMask.appendTail(tail) :\n      super.appendTail(tail));\n  }\n\n  currentMaskFlags (flags: AppendFlags<HandleState>): AppendFlags {\n    return {\n      ...flags,\n      _beforeTailState:\n        (flags._beforeTailState as MaskedDynamicRefState)?.currentMaskRef === this.currentMask &&\n        (flags._beforeTailState as MaskedDynamicRefState)?.currentMask ||\n        flags._beforeTailState,\n    };\n  }\n\n  doDispatch(appended: string, flags: AppendFlags<HandleState>={}, tail: string | String | TailDetails=''): Masked | undefined {\n    return this.dispatch(appended, this, flags, tail);\n  }\n\n  override doValidate (flags: AppendFlags<HandleState>): boolean {\n    return super.doValidate(flags) && (\n      !this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags))\n    );\n  }\n\n  override doPrepare (str: string, flags: AppendFlags<HandleState>={}): [string, ChangeDetails] {\n    let [s, details] = super.doPrepare(str, flags);\n\n    if (this.currentMask) {\n      let currentDetails;\n      ([s, currentDetails] = super.doPrepare(s, this.currentMaskFlags(flags)));\n      details = details.aggregate(currentDetails);\n    }\n\n    return [s, details];\n  }\n\n  override doPrepareChar (str: string, flags: AppendFlags<HandleState>={}): [string, ChangeDetails] {\n    let [s, details] = super.doPrepareChar(str, flags);\n\n    if (this.currentMask) {\n      let currentDetails;\n      ([s, currentDetails] = super.doPrepareChar(s, this.currentMaskFlags(flags)));\n      details = details.aggregate(currentDetails);\n    }\n\n    return [s, details];\n  }\n\n  override reset () {\n    this.currentMask?.reset();\n    this.compiledMasks.forEach(m => m.reset());\n  }\n\n  override get value (): string {\n    return this.currentMask ? this.currentMask.value : '';\n  }\n\n  override set value (value: string) {\n    super.value = value;\n  }\n\n  override get unmaskedValue (): string {\n    return this.currentMask ? this.currentMask.unmaskedValue : '';\n  }\n\n  override set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  override get typedValue (): Value {\n    return this.currentMask ? this.currentMask.typedValue : '';\n  }\n\n  // probably typedValue should not be used with dynamic\n  override set typedValue (value: Value) {\n    let unmaskedValue = String(value);\n\n    // double check it\n    if (this.currentMask) {\n      this.currentMask.typedValue = value;\n      unmaskedValue = this.currentMask.unmaskedValue;\n    }\n    this.unmaskedValue = unmaskedValue;\n  }\n\n  override get displayValue (): string {\n    return this.currentMask ? this.currentMask.displayValue : '';\n  }\n\n  override get isComplete (): boolean {\n    return Boolean(this.currentMask?.isComplete);\n  }\n\n  override get isFilled (): boolean {\n    return Boolean(this.currentMask?.isFilled);\n  }\n\n  override remove (fromPos?: number, toPos?: number): ChangeDetails {\n    const details: ChangeDetails = new ChangeDetails();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask.remove(fromPos, toPos))\n        // update with dispatch\n        .aggregate(this._applyDispatch());\n    }\n\n    return details;\n  }\n\n  override get state (): MaskedDynamicState {\n    return {\n      ...super.state,\n      _rawInputValue: this.rawInputValue,\n      compiledMasks: this.compiledMasks.map(m => m.state),\n      currentMaskRef: this.currentMask,\n      currentMask: this.currentMask?.state,\n    };\n  }\n\n  override set state (state: HandleState) {\n    const { compiledMasks, currentMaskRef, currentMask, ...maskedState } = state as MaskedDynamicRefState;\n    if (compiledMasks) this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n    if (currentMaskRef != null) {\n      this.currentMask = currentMaskRef;\n      this.currentMask.state = currentMask;\n    }\n    super.state = maskedState;\n  }\n\n  override extractInput (fromPos?: number, toPos?: number, flags?: ExtractFlags): string {\n    return this.currentMask ?\n      this.currentMask.extractInput(fromPos, toPos, flags) :\n      '';\n  }\n\n  override extractTail (fromPos?: number, toPos?: number): TailDetails {\n    return this.currentMask ?\n      this.currentMask.extractTail(fromPos, toPos) :\n      super.extractTail(fromPos, toPos);\n  }\n\n  override doCommit () {\n    if (this.currentMask) this.currentMask.doCommit();\n    super.doCommit();\n  }\n\n  override nearestInputPos(cursorPos: number, direction?: Direction): number {\n    return this.currentMask ?\n      this.currentMask.nearestInputPos(cursorPos, direction) :\n      super.nearestInputPos(cursorPos, direction);\n  }\n\n  override get overwrite (): boolean | 'shift' | undefined {\n    return this.currentMask ?\n      this.currentMask.overwrite :\n      this._overwrite;\n  }\n\n  override set overwrite (overwrite: boolean | 'shift' | undefined) {\n    this._overwrite = overwrite;\n  }\n\n  override get eager (): boolean | 'remove' | 'append' | undefined {\n    return this.currentMask ?\n      this.currentMask.eager :\n      this._eager;\n  }\n\n  override set eager (eager: boolean | 'remove' | 'append' | undefined) {\n    this._eager = eager;\n  }\n\n  override get skipInvalid (): boolean | undefined {\n    return this.currentMask ?\n      this.currentMask.skipInvalid :\n      this._skipInvalid;\n  }\n\n  override set skipInvalid (skipInvalid: boolean | undefined) {\n    this._skipInvalid = skipInvalid;\n  }\n\n  override maskEquals (mask: any): boolean {\n    return Array.isArray(mask) ?\n      this.compiledMasks.every((m, mi) => {\n        if (!mask[mi]) return;\n\n        const { mask: oldMask, ...restOpts } = mask[mi];\n        return objectIncludes(m, restOpts) && m.maskEquals(oldMask);\n      }) : super.maskEquals(mask);\n  }\n\n  override typedValueEquals (value: any): boolean {\n    return Boolean(this.currentMask?.typedValueEquals(value));\n  }\n}\n\nMaskedDynamic.DEFAULTS = {\n  dispatch: (appended, masked, flags, tail) => {\n    if (!masked.compiledMasks.length) return;\n\n    const inputValue = masked.rawInputValue;\n\n    // simulate input\n    const inputs = masked.compiledMasks.map((m, index) => {\n      const isCurrent = masked.currentMask === m;\n      const startInputPos = isCurrent ? m.value.length : m.nearestInputPos(m.value.length, DIRECTION.FORCE_LEFT);\n\n      if (m.rawInputValue !== inputValue) {\n        m.reset();\n        m.append(inputValue, { raw: true });\n      } else if (!isCurrent) {\n        m.remove(startInputPos);\n      }\n      m.append(appended, masked.currentMaskFlags(flags));\n      m.appendTail(tail);\n\n      return {\n        index,\n        weight: m.rawInputValue.length,\n        totalInputPositions: m.totalInputPositions(\n          0,\n          Math.max(startInputPos, m.nearestInputPos(m.value.length, DIRECTION.FORCE_LEFT)),\n        ),\n      };\n    });\n\n    // pop masks with longer values first\n    inputs.sort((i1, i2) => i2.weight - i1.weight || i2.totalInputPositions - i1.totalInputPositions);\n\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\n\n\nIMask.MaskedDynamic = MaskedDynamic;\n","import MaskedPattern, { type MaskedPatternOptions } from './pattern';\nimport { AppendFlags } from './base';\nimport IMask from '../core/holder';\n\n\nexport\ntype MaskedEnumOptions = Omit<MaskedPatternOptions, 'mask'> & Pick<MaskedEnum, 'enum'>;\n\nexport\ntype MaskedEnumPatternOptions = MaskedPatternOptions & Partial<Pick<MaskedEnum, 'enum'>>;\n\n\n/** Pattern which validates enum values */\nexport default\nclass MaskedEnum extends MaskedPattern {\n  declare enum: Array<string>;\n\n  override updateOptions (opts: Partial<MaskedEnumOptions>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedEnumOptions>) {\n    const { enum: _enum, ...eopts }: MaskedEnumPatternOptions = opts;\n\n    if (_enum) {\n      eopts.mask = '*'.repeat(_enum[0].length);\n      this.enum = _enum;\n    }\n\n    super._update(eopts);\n  }\n\n  override doValidate (flags: AppendFlags): boolean {\n    return this.enum.some(e => e.indexOf(this.unmaskedValue) >= 0) &&\n      super.doValidate(flags);\n  }\n}\n\n\nIMask.MaskedEnum = MaskedEnum;\n","import Masked, { type MaskedOptions } from './base';\nimport IMask from '../core/holder';\n\n\nexport\ntype MaskedFunctionOptions = MaskedOptions<MaskedFunction>;\n\n/** Masking by custom Function */\nexport default\nclass MaskedFunction<Value=any> extends Masked<Value> {\n  /** */\n  declare mask: (value: string, masked: Masked) => boolean;\n  /** Enable characters overwriting */\n  declare overwrite?: boolean | 'shift' | undefined;\n  /** */\n  declare eager?: boolean | 'remove' | 'append' | undefined;\n  /** */\n  declare skipInvalid?: boolean | undefined;\n\n  override updateOptions (opts: Partial<MaskedFunctionOptions>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedFunctionOptions>) {\n    super._update({\n      ...opts,\n      validate: opts.mask,\n    });\n  }\n}\n\n\nIMask.MaskedFunction = MaskedFunction;\n","import { escapeRegExp, type Direction, DIRECTION } from '../core/utils';\nimport ChangeDetails from '../core/change-details';\nimport { type TailDetails } from '../core/tail-details';\n\nimport Masked, { type MaskedOptions, type ExtractFlags, type AppendFlags } from './base';\nimport IMask from '../core/holder';\n\n\nexport\ntype MaskedNumberOptions = MaskedOptions<MaskedNumber,\n  | 'radix'\n  | 'thousandsSeparator'\n  | 'mapToRadix'\n  | 'scale'\n  | 'min'\n  | 'max'\n  | 'normalizeZeros'\n  | 'padFractionalZeros'\n>;\n\n/**\n  Number mask\n*/\nexport default\nclass MaskedNumber extends Masked<number> {\n  static UNMASKED_RADIX = '.';\n  static EMPTY_VALUES: Array<null | undefined | string | number> = [...Masked.EMPTY_VALUES, 0];\n  static DEFAULTS: Partial<MaskedNumberOptions> = {\n    mask: Number,\n    radix: ',',\n    thousandsSeparator: '',\n    mapToRadix: [MaskedNumber.UNMASKED_RADIX],\n    min: Number.MIN_SAFE_INTEGER,\n    max: Number.MAX_SAFE_INTEGER,\n    scale: 2,\n    normalizeZeros: true,\n    padFractionalZeros: false,\n    parse: Number,\n    format: (n: number) => n.toLocaleString('en-US', { useGrouping: false, maximumFractionDigits: 20 }),\n  };\n\n  declare mask: NumberConstructor;\n  /** Single char */\n  declare radix: string;\n  /** Single char */\n  declare thousandsSeparator: string;\n  /** Array of single chars */\n  declare mapToRadix: Array<string>;\n  /** */\n  declare min: number;\n  /** */\n  declare max: number;\n  /** Digits after point */\n  declare scale: number;\n  /** Flag to remove leading and trailing zeros in the end of editing */\n  declare normalizeZeros: boolean;\n  /** Flag to pad trailing zeros after point in the end of editing */\n  declare padFractionalZeros: boolean;\n  /** Enable characters overwriting */\n  declare overwrite?: boolean | 'shift' | undefined;\n  /** */\n  declare eager?: boolean | 'remove' | 'append' | undefined;\n  /** */\n  declare skipInvalid?: boolean | undefined;\n  /** Format typed value to string */\n  declare format: (value: number, masked: Masked) => string;\n  /** Parse string to get typed value */\n  declare parse: (str: string, masked: Masked) => number;\n\n  declare _numberRegExp: RegExp;\n  declare _thousandsSeparatorRegExp: RegExp;\n  declare _mapToRadixRegExp: RegExp;\n  declare _separatorsProcessed: boolean;\n\n  constructor (opts?: MaskedNumberOptions) {\n    super({\n      ...MaskedNumber.DEFAULTS,\n      ...opts,\n    });\n  }\n\n  override updateOptions (opts: Partial<MaskedNumberOptions>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedNumberOptions>) {\n    super._update(opts);\n    this._updateRegExps();\n  }\n\n  _updateRegExps () {\n    const start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n    const mid = '\\\\d*';\n    const end = (this.scale ?\n      `(${escapeRegExp(this.radix)}\\\\d{0,${this.scale}})?` :\n      '') + '$';\n\n    this._numberRegExp = new RegExp(start + mid + end);\n    this._mapToRadixRegExp = new RegExp(`[${this.mapToRadix.map(escapeRegExp).join('')}]`, 'g');\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n  }\n\n  _removeThousandsSeparators (value: string): string {\n    return value.replace(this._thousandsSeparatorRegExp, '');\n  }\n\n  _insertThousandsSeparators (value: string): string {\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n    const parts = value.split(this.radix);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    return parts.join(this.radix);\n  }\n\n  override doPrepareChar (ch: string, flags: AppendFlags={}): [string, ChangeDetails] {\n    ch = this._removeThousandsSeparators(\n      this.scale && this.mapToRadix.length && (\n        /*\n          radix should be mapped when\n          1) input is done from keyboard = flags.input && flags.raw\n          2) unmasked value is set = !flags.input && !flags.raw\n          and should not be mapped when\n          1) value is set = flags.input && !flags.raw\n          2) raw value is set = !flags.input && flags.raw\n        */\n        flags.input && flags.raw ||\n        !flags.input && !flags.raw\n      ) ? ch.replace(this._mapToRadixRegExp, this.radix) : ch\n    );\n\n    const [prepCh, details] = super.doPrepareChar(ch, flags);\n    if (ch && !prepCh) details.skip = true;\n\n    if (prepCh && !this.allowPositive && !this.value && prepCh !== '-') details.aggregate(this._appendChar('-'));\n\n    return [prepCh, details];\n  }\n\n  _separatorsCount (to: number, extendOnSeparators: boolean=false): number {\n    let count = 0;\n\n    for (let pos = 0; pos < to; ++pos) {\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n        ++count;\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\n      }\n    }\n\n    return count;\n  }\n\n  _separatorsCountFromSlice (slice: string=this._value): number {\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n  }\n\n  override extractInput (fromPos: number=0, toPos: number=this.value.length, flags?: ExtractFlags): string {\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n  }\n\n  \n  override _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (!this.thousandsSeparator) return super._appendCharRaw(ch, flags);\n\n    const prevBeforeTailValue = flags.tail && flags._beforeTailState ?\n      flags._beforeTailState._value :\n      this._value;\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n    this._value = this._removeThousandsSeparators(this.value);\n\n    const appendDetails = super._appendCharRaw(ch, flags);\n\n    this._value = this._insertThousandsSeparators(this._value);\n    const beforeTailValue = flags.tail && flags._beforeTailState ?\n      flags._beforeTailState._value :\n      this._value;\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n    appendDetails.skip = !appendDetails.rawInserted && ch === this.thousandsSeparator;\n    return appendDetails;\n  }\n\n  _findSeparatorAround (pos: number): number {\n    if (this.thousandsSeparator) {\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n      if (separatorPos <= pos) return separatorPos;\n    }\n\n    return -1;\n  }\n\n  _adjustRangeWithSeparators (from: number, to: number): [number, number] {\n    const separatorAroundFromPos = this._findSeparatorAround(from);\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n\n    const separatorAroundToPos = this._findSeparatorAround(to);\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n    return [from, to];\n  }\n\n  \n  override remove (fromPos: number=0, toPos: number=this.value.length): ChangeDetails {\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n\n    const valueBeforePos = this.value.slice(0, fromPos);\n    const valueAfterPos = this.value.slice(toPos);\n\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n\n    return new ChangeDetails({\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length,\n    });\n  }\n\n  override nearestInputPos (cursorPos: number, direction?: Direction): number {\n    if (!this.thousandsSeparator) return cursorPos;\n\n    switch (direction) {\n      case DIRECTION.NONE:\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT: {\n        const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n        if (separatorAtLeftPos >= 0) {\n          const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n          if (cursorPos < separatorAtLeftEndPos ||\n            this.value.length <= separatorAtLeftEndPos ||\n            direction === DIRECTION.FORCE_LEFT\n          ) {\n            return separatorAtLeftPos;\n          }\n        }\n        break;\n      }\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT: {\n        const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n        if (separatorAtRightPos >= 0) {\n          return separatorAtRightPos + this.thousandsSeparator.length;\n        }\n      }\n    }\n\n    return cursorPos;\n  }\n\n  override doValidate (flags: AppendFlags): boolean {\n    // validate as string\n    let valid = Boolean(this._removeThousandsSeparators(this.value).match(this._numberRegExp));\n\n    if (valid) {\n      // validate as number\n      const number = this.number;\n      valid = valid && !isNaN(number) &&\n        // check min bound for negative values\n        (this.min == null || this.min >= 0 || this.min <= this.number) &&\n        // check max bound for positive values\n        (this.max == null || this.max <= 0 || this.number <= this.max);\n    }\n\n    return valid && super.doValidate(flags);\n  }\n\n  override doCommit () {\n    if (this.value) {\n      const number = this.number;\n      let validnum = number;\n\n      // check bounds\n      if (this.min != null) validnum = Math.max(validnum, this.min);\n      if (this.max != null) validnum = Math.min(validnum, this.max);\n\n      if (validnum !== number) this.unmaskedValue = this.format(validnum, this);\n\n      let formatted = this.value;\n\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n      if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n\n      this._value = formatted;\n    }\n\n    super.doCommit();\n  }\n\n  _normalizeZeros (value: string): string {\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n    // remove leading zeros\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n    // add leading zero\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n\n    if (parts.length > 1) {\n      parts[1] = parts[1].replace(/0*$/, '');  // remove trailing zeros\n      if (!parts[1].length) parts.length = 1;  // remove fractional\n    }\n\n    return this._insertThousandsSeparators(parts.join(this.radix));\n  }\n\n  _padFractionalZeros (value: string): string {\n    if (!value) return value;\n\n    const parts = value.split(this.radix);\n    if (parts.length < 2) parts.push('');\n    parts[1] = parts[1].padEnd(this.scale, '0');\n    return parts.join(this.radix);\n  }\n\n  doSkipInvalid (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): boolean {\n    const dropFractional = this.scale === 0 && ch !== this.thousandsSeparator && (\n      ch === this.radix ||\n      ch === MaskedNumber.UNMASKED_RADIX ||\n      this.mapToRadix.includes(ch)\n    )\n    return super.doSkipInvalid(ch, flags, checkTail) && !dropFractional;\n  }\n\n  override get unmaskedValue (): string {\n    return this._removeThousandsSeparators(\n      this._normalizeZeros(\n        this.value))\n      .replace(this.radix, MaskedNumber.UNMASKED_RADIX);\n  }\n\n  override set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  override get typedValue (): number {\n    return this.parse(this.unmaskedValue, this);\n  }\n\n  override set typedValue (n: number) {\n    this.rawInputValue = this.format(n, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n  }\n\n  /** Parsed Number */\n  get number (): number {\n    return this.typedValue;\n  }\n\n  set number (number: number) {\n    this.typedValue = number;\n  }\n\n  /**\n    Is negative allowed\n  */\n  get allowNegative (): boolean {\n    return (this.min != null && this.min < 0) || (this.max != null && this.max < 0);\n  }\n\n  /**\n    Is positive allowed\n  */\n  get allowPositive (): boolean {\n    return (this.min != null && this.min > 0) || (this.max != null && this.max > 0);\n  }\n\n  override typedValueEquals (value: any): boolean {\n    // handle  0 -> '' case (typed = 0 even if value = '')\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n    return (\n      super.typedValueEquals(value) ||\n      MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)\n    ) && !(value === 0 && this.value === '');\n  }\n}\n\n\nIMask.MaskedNumber = MaskedNumber;\n","import createMask, { type FactoryArg, type FactoryReturnMasked } from './factory';\nimport IMask from '../core/holder';\n\n\n/** Mask pipe source and destination types */\nexport\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue',\n} as const;\n\ntype ValueOf<T> = T[keyof T];\n\ntype TypedValueOf<\n  Opts extends FactoryArg,\n  Type extends ValueOf<typeof PIPE_TYPE>\n> = Type extends (typeof PIPE_TYPE.MASKED | typeof PIPE_TYPE.UNMASKED) ?\n  string :\n  FactoryReturnMasked<Opts>['typedValue']\n;\n\n/** Creates new pipe function depending on mask type, source and destination options */\nexport\nfunction createPipe<\n  Arg extends FactoryArg,\n  From extends ValueOf<typeof PIPE_TYPE> = typeof PIPE_TYPE.MASKED,\n  To extends ValueOf<typeof PIPE_TYPE> = typeof PIPE_TYPE.MASKED,\n> (\n  arg: Arg,\n  from: From=PIPE_TYPE.MASKED as From,\n  to: To=PIPE_TYPE.MASKED as To,\n) {\n  const masked = createMask(arg);\n  return (value: TypedValueOf<Arg, From>) => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to] as TypedValueOf<Arg, To>;\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nexport\nfunction pipe<\n  Arg extends FactoryArg,\n  From extends ValueOf<typeof PIPE_TYPE> = typeof PIPE_TYPE.MASKED,\n  To extends ValueOf<typeof PIPE_TYPE> = typeof PIPE_TYPE.MASKED,\n> (\n  value: TypedValueOf<Arg, From>,\n  mask: Arg,\n  from?: From,\n  to?: To,\n) {\n  return createPipe(mask, from, to)(value);\n}\n\n\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n","import IMask from './imask';\nexport { default as HTMLContenteditableMaskElement } from './controls/html-contenteditable-mask-element';\nexport { default as HTMLInputMaskElement, type InputElement } from './controls/html-input-mask-element';\nexport { default as HTMLMaskElement } from './controls/html-mask-element';\nexport { default as InputMask, type InputMaskElement } from './controls/input';\nexport { default as MaskElement } from './controls/mask-element';\nexport { default as ChangeDetails, type ChangeDetailsOptions } from './core/change-details';\nexport { type AppendTail, type TailDetails } from './core/tail-details';\nexport { DIRECTION, forceDirection, type Direction, type Selection } from './core/utils';\nexport { default as Masked, type AppendFlags, type ExtractFlags, type MaskedOptions, type MaskedState } from './masked/base';\nexport { default as MaskedDate, type DateMaskType, type MaskedDateOptions } from './masked/date';\nexport { default as MaskedDynamic, type DynamicMaskType, type MaskedDynamicOptions, type MaskedDynamicState } from './masked/dynamic';\nexport { default as MaskedEnum, type MaskedEnumOptions } from './masked/enum';\nexport {\n    default as createMask,\n    normalizeOpts,\n    type AllFactoryStaticOpts,\n    type FactoryArg,\n    type FactoryConstructorOpts,\n    type FactoryConstructorReturnMasked,\n    type FactoryInstanceOpts,\n    type FactoryInstanceReturnMasked,\n    type FactoryOpts,\n    type FactoryReturnMasked,\n    type FactoryStaticOpts,\n    type FactoryStaticReturnMasked,\n    type NormalizedOpts,\n    type UpdateOpts,\n} from './masked/factory';\nexport { default as MaskedFunction, type MaskedFunctionOptions } from './masked/function';\nexport { default as MaskedNumber, type MaskedNumberOptions } from './masked/number';\nexport { default as MaskedPattern, type BlockPosData, type Definitions, type MaskedPatternOptions, type MaskedPatternState } from './masked/pattern';\nexport { type default as PatternBlock } from './masked/pattern/block';\nexport { default as ChunksTailDetails, type ChunksTailState } from './masked/pattern/chunk-tail-details';\nexport { default as PatternFixedDefinition, type PatternFixedDefinitionOptions } from './masked/pattern/fixed-definition';\nexport { default as PatternInputDefinition, type PatternInputDefinitionOptions, type PatternInputDefinitionState } from './masked/pattern/input-definition';\nexport { createPipe, pipe, PIPE_TYPE } from './masked/pipe';\nexport { default as MaskedRange, type MaskedRangeOptions } from './masked/range';\nexport { default as MaskedRegExp, type MaskedRegExpOptions } from './masked/regexp';\n\ntry {\n  (globalThis as any).IMask = IMask;\n} catch {}\nexport default IMask;\n"],"names":["isString","str","String","isObject","obj","_obj$constructor","constructor","name","pick","keys","Array","isArray","_","k","includes","Object","entries","reduce","acc","_ref","v","DIRECTION","NONE","LEFT","FORCE_LEFT","RIGHT","FORCE_RIGHT","forceDirection","direction","escapeRegExp","replace","objectIncludes","b","a","arrA","arrB","i","length","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","prototype","hasOwnProperty","call","ActionDetails","opts","assign","value","slice","startChangePos","oldValue","oldSelection","start","Math","min","cursorPos","insertedCount","inserted","substr","removedCount","max","end","removed","head","substring","tail","removeDirection","IMask","el","InputMask","maskedClass","mask","Error","MaskedRegExp","MaskedPattern","MaskedDate","Number","MaskedNumber","MaskedDynamic","Masked","Function","MaskedFunction","console","warn","normalizeOpts","undefined","instanceOpts","_mask","startsWith","createMask","nOpts","MaskedClass","MaskElement","selectionStart","_unsafeSelectionStart","selectionEnd","_unsafeSelectionEnd","select","_unsafeSelect","isActive","HTMLMaskElement","input","_handlers","rootElement","_this$input$getRootNo","_this$input$getRootNo2","_this$input","getRootNode","document","activeElement","bindEvents","handlers","forEach","event","_toggleEventHandler","EVENTS_MAP","unbindEvents","handler","removeEventListener","addEventListener","selectionChange","drop","click","focus","commit","HTMLInputMaskElement","setSelectionRange","HTMLContenteditableMaskElement","root","selection","getSelection","anchorOffset","focusOffset","createRange","range","setStart","firstChild","setEnd","lastChild","removeAllRanges","addRange","textContent","isContentEditable","tagName","masked","_listeners","_value","_unmaskedValue","_saveSelection","bind","_onInput","_onChange","_onDrop","_onFocus","_onClick","alignCursor","alignCursorFriendly","_bindEvents","updateValue","maskEquals","_this$masked","updateOptions","unmaskedValue","updateControl","typedValue","val","typedValueEquals","displayValue","_unbindEvents","_fireEvent","ev","e","listeners","l","_cursorChanging","_changingCursorPos","pos","_selection","newUnmaskedValue","newValue","newDisplayValue","isChanged","_fireChangeEvents","restOpts","updateMask","updateOpts","updateCursor","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_inputEvent","isComplete","clearTimeout","nearestInputPos","on","push","off","hIndex","indexOf","splice","details","oldRawValue","rawInputValue","offset","raw","doCommit","preventDefault","stopPropagation","destroy","ChangeDetails","normalize","prep","rawInserted","skip","tailShift","aggregate","ContinuousTailDetails","from","stop","extend","appendTo","append","_appendPlaceholder","state","unshift","beforePos","shiftChar","shift","_update","DEFAULTS","_initialized","withValueRefresh","_rawInputValue","reset","resolve","flags","parse","format","extractInput","isFilled","totalInputPositions","fromPos","toPos","extractTail","appendTail","_appendCharRaw","ch","_appendChar","checkTail","consistentState","doPrepareChar","consistentTail","appended","doValidate","beforeTailState","overwrite","tailDetails","_appendEager","_beforeTailState","doPrepare","ci","d","doSkipInvalid","eager","remove","fn","_refreshing","rawInput","ret","runIsolated","_isolated","Boolean","skipInvalid","prepare","prepareChar","validate","parent","deleteCount","tailPos","eagerRemove","valLength","tval","EMPTY_VALUES","ChunksTailDetails","chunks","map","join","tailChunk","lastChunk","extendLast","firstTailChunk","blockIndex","chunk","lastBlockIter","_mapPosToBlock","chunkBlock","index","_stops","phDetails","_blocks","remainChars","c","props","cstate","chunkShiftPos","PatternCursor","_log","ok","block","_blockStartPos","s","pushState","popState","pop","bindBlock","_pushLeft","_this$block","_pushRight","pushLeftBeforeFilled","isFixed","pushLeftBeforeInput","pushLeftBeforeRequired","isOptional","pushRightBeforeFilled","pushRightBeforeInput","pushRightBeforeRequired","PatternFixedDefinition","isUnmasking","_isRawInput","minPos","maxPos","appendEager","char","isResolved","PatternInputDefinition","placeholderChar","displayChar","lazy","maskOpts","currentMaskFlags","boundPos","_flags$_beforeTailSta","DEFAULT_DEFINITIONS","search","definitions","_rebuildMask","defs","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","blocks","p","bNames","filter","bName","sort","maskedBlock","isInput","STOP_CHAR","ESCAPE_CHAR","def","maskedState","bi","every","_this$_mapPosToBlock","startBlockIndex","blockIter","_flags$_beforeTailSta2","blockDetails","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_findStopBefore","stopBefore","si","toBlockIndex","startBlockIter","endBlockIndex","_blocks2","bDetails","accVal","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","cursor","total","maskedBlocks","indices","gi","InputDefinition","FixedDefinition","MaskedRange","_matchFrom","maxLength","to","autofix","patternOpts","fromStr","padStart","toStr","sameCharsCount","repeat","boundaries","minstr","maxstr","placeholder","num","match","padEnd","nextVal","firstNonZero","patternBlocks","GET_DEFAULT_BLOCKS","Y","getFullYear","m","getMonth","getDate","bk","date","isDateExist","day","month","year","split","currentMask","compiledMasks","_overwrite","_eager","_skipInvalid","_applyDispatch","prevValueBeforeTail","inputValue","insertValue","tailValue","prevMask","prevMaskState","doDispatch","currentMaskRef","dispatch","currentDetails","_this$currentMask","_this$currentMask2","_this$currentMask3","_this$currentMask4","mi","oldMask","_this$currentMask5","inputs","isCurrent","startInputPos","weight","i1","i2","MaskedEnum","enum","_enum","eopts","some","_updateRegExps","allowNegative","mid","scale","radix","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","_removeThousandsSeparators","_insertThousandsSeparators","parts","prepCh","allowPositive","_separatorsCount","extendOnSeparators","count","_separatorsCountFromSlice","_adjustRangeWithSeparators","prevBeforeTailValue","prevBeforeTailSeparatorsCount","appendDetails","beforeTailValue","beforeTailSeparatorsCount","_findSeparatorAround","searchFrom","separatorPos","separatorAroundFromPos","separatorAroundToPos","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","valid","number","isNaN","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","test","dropFractional","UNMASKED_RADIX","n","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","toLocaleString","useGrouping","maximumFractionDigits","PIPE_TYPE","MASKED","UNMASKED","TYPED","createPipe","arg","pipe","globalThis"],"mappings":"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"}